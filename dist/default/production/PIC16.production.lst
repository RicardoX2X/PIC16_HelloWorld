

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Aug 31 03:15:47 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32     0000                     
    33                           ; Generated 22/03/2023 GMT
    34                           ; 
    35                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution. Publication is not required when
    49                           ;        this file is used in an embedded application.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F887 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67     0000                     	;# 
    68     0001                     	;# 
    69     0002                     	;# 
    70     0003                     	;# 
    71     0004                     	;# 
    72     0005                     	;# 
    73     0006                     	;# 
    74     0007                     	;# 
    75     0008                     	;# 
    76     0009                     	;# 
    77     000A                     	;# 
    78     000B                     	;# 
    79     000C                     	;# 
    80     000D                     	;# 
    81     000E                     	;# 
    82     000E                     	;# 
    83     000F                     	;# 
    84     0010                     	;# 
    85     0011                     	;# 
    86     0012                     	;# 
    87     0013                     	;# 
    88     0014                     	;# 
    89     0015                     	;# 
    90     0015                     	;# 
    91     0016                     	;# 
    92     0017                     	;# 
    93     0018                     	;# 
    94     0019                     	;# 
    95     001A                     	;# 
    96     001B                     	;# 
    97     001B                     	;# 
    98     001C                     	;# 
    99     001D                     	;# 
   100     001E                     	;# 
   101     001F                     	;# 
   102     0081                     	;# 
   103     0085                     	;# 
   104     0086                     	;# 
   105     0087                     	;# 
   106     0088                     	;# 
   107     0089                     	;# 
   108     008C                     	;# 
   109     008D                     	;# 
   110     008E                     	;# 
   111     008F                     	;# 
   112     0090                     	;# 
   113     0091                     	;# 
   114     0092                     	;# 
   115     0093                     	;# 
   116     0093                     	;# 
   117     0093                     	;# 
   118     0094                     	;# 
   119     0095                     	;# 
   120     0096                     	;# 
   121     0097                     	;# 
   122     0098                     	;# 
   123     0099                     	;# 
   124     009A                     	;# 
   125     009B                     	;# 
   126     009C                     	;# 
   127     009D                     	;# 
   128     009E                     	;# 
   129     009F                     	;# 
   130     0105                     	;# 
   131     0107                     	;# 
   132     0108                     	;# 
   133     0109                     	;# 
   134     010C                     	;# 
   135     010C                     	;# 
   136     010D                     	;# 
   137     010E                     	;# 
   138     010F                     	;# 
   139     0185                     	;# 
   140     0187                     	;# 
   141     0188                     	;# 
   142     0189                     	;# 
   143     018C                     	;# 
   144     018D                     	;# 
   145     0000                     	;# 
   146     0001                     	;# 
   147     0002                     	;# 
   148     0003                     	;# 
   149     0004                     	;# 
   150     0005                     	;# 
   151     0006                     	;# 
   152     0007                     	;# 
   153     0008                     	;# 
   154     0009                     	;# 
   155     000A                     	;# 
   156     000B                     	;# 
   157     000C                     	;# 
   158     000D                     	;# 
   159     000E                     	;# 
   160     000E                     	;# 
   161     000F                     	;# 
   162     0010                     	;# 
   163     0011                     	;# 
   164     0012                     	;# 
   165     0013                     	;# 
   166     0014                     	;# 
   167     0015                     	;# 
   168     0015                     	;# 
   169     0016                     	;# 
   170     0017                     	;# 
   171     0018                     	;# 
   172     0019                     	;# 
   173     001A                     	;# 
   174     001B                     	;# 
   175     001B                     	;# 
   176     001C                     	;# 
   177     001D                     	;# 
   178     001E                     	;# 
   179     001F                     	;# 
   180     0081                     	;# 
   181     0085                     	;# 
   182     0086                     	;# 
   183     0087                     	;# 
   184     0088                     	;# 
   185     0089                     	;# 
   186     008C                     	;# 
   187     008D                     	;# 
   188     008E                     	;# 
   189     008F                     	;# 
   190     0090                     	;# 
   191     0091                     	;# 
   192     0092                     	;# 
   193     0093                     	;# 
   194     0093                     	;# 
   195     0093                     	;# 
   196     0094                     	;# 
   197     0095                     	;# 
   198     0096                     	;# 
   199     0097                     	;# 
   200     0098                     	;# 
   201     0099                     	;# 
   202     009A                     	;# 
   203     009B                     	;# 
   204     009C                     	;# 
   205     009D                     	;# 
   206     009E                     	;# 
   207     009F                     	;# 
   208     0105                     	;# 
   209     0107                     	;# 
   210     0108                     	;# 
   211     0109                     	;# 
   212     010C                     	;# 
   213     010C                     	;# 
   214     010D                     	;# 
   215     010E                     	;# 
   216     010F                     	;# 
   217     0185                     	;# 
   218     0187                     	;# 
   219     0188                     	;# 
   220     0189                     	;# 
   221     018C                     	;# 
   222     018D                     	;# 
   223     0000                     	;# 
   224     0001                     	;# 
   225     0002                     	;# 
   226     0003                     	;# 
   227     0004                     	;# 
   228     0005                     	;# 
   229     0006                     	;# 
   230     0007                     	;# 
   231     0008                     	;# 
   232     0009                     	;# 
   233     000A                     	;# 
   234     000B                     	;# 
   235     000C                     	;# 
   236     000D                     	;# 
   237     000E                     	;# 
   238     000E                     	;# 
   239     000F                     	;# 
   240     0010                     	;# 
   241     0011                     	;# 
   242     0012                     	;# 
   243     0013                     	;# 
   244     0014                     	;# 
   245     0015                     	;# 
   246     0015                     	;# 
   247     0016                     	;# 
   248     0017                     	;# 
   249     0018                     	;# 
   250     0019                     	;# 
   251     001A                     	;# 
   252     001B                     	;# 
   253     001B                     	;# 
   254     001C                     	;# 
   255     001D                     	;# 
   256     001E                     	;# 
   257     001F                     	;# 
   258     0081                     	;# 
   259     0085                     	;# 
   260     0086                     	;# 
   261     0087                     	;# 
   262     0088                     	;# 
   263     0089                     	;# 
   264     008C                     	;# 
   265     008D                     	;# 
   266     008E                     	;# 
   267     008F                     	;# 
   268     0090                     	;# 
   269     0091                     	;# 
   270     0092                     	;# 
   271     0093                     	;# 
   272     0093                     	;# 
   273     0093                     	;# 
   274     0094                     	;# 
   275     0095                     	;# 
   276     0096                     	;# 
   277     0097                     	;# 
   278     0098                     	;# 
   279     0099                     	;# 
   280     009A                     	;# 
   281     009B                     	;# 
   282     009C                     	;# 
   283     009D                     	;# 
   284     009E                     	;# 
   285     009F                     	;# 
   286     0105                     	;# 
   287     0107                     	;# 
   288     0108                     	;# 
   289     0109                     	;# 
   290     010C                     	;# 
   291     010C                     	;# 
   292     010D                     	;# 
   293     010E                     	;# 
   294     010F                     	;# 
   295     0185                     	;# 
   296     0187                     	;# 
   297     0188                     	;# 
   298     0189                     	;# 
   299     018C                     	;# 
   300     018D                     	;# 
   301                           
   302                           	psect	idataBANK0
   303     037E                     __pidataBANK0:
   304                           
   305                           ;initializer for _BackLight_State
   306     037E  3408               	retlw	8
   307                           
   308                           	psect	strings
   309     0003                     __pstrings:
   310     0003                     stringtab:
   311     0003                     __stringtab:
   312                           
   313                           ;	String table - string pointers are 1 byte each
   314     0003  1BFF               	btfsc	btemp+1,7
   315     0004  280D               	ljmp	stringcode
   316     0005  1383               	bcf	3,7
   317     0006  187F               	btfsc	btemp+1,0
   318     0007  1783               	bsf	3,7
   319     0008  0800               	movf	0,w
   320     0009  0A84               	incf	4,f
   321     000A  1903               	skipnz
   322     000B  0AFF               	incf	btemp+1,f
   323     000C  0008               	return
   324     000D                     stringcode:
   325     000D                     stringdir:
   326     000D  3000               	movlw	high stringdir
   327     000E  008A               	movwf	10
   328     000F  0804               	movf	4,w
   329     0010  0A84               	incf	4,f
   330     0011  0782               	addwf	2,f
   331     0012                     __stringbase:
   332     0012  3400               	retlw	0
   333     0013                     __end_of__stringtab:
   334     0013                     _dpowers:
   335     0013  3401               	retlw	1
   336     0014  3400               	retlw	0
   337     0015  340A               	retlw	10
   338     0016  3400               	retlw	0
   339     0017  3464               	retlw	100
   340     0018  3400               	retlw	0
   341     0019  34E8               	retlw	232
   342     001A  3403               	retlw	3
   343     001B  3410               	retlw	16
   344     001C  3427               	retlw	39
   345     001D                     __end_of_dpowers:
   346     001D                     STR_1:
   347     001D  3452               	retlw	82	;'R'
   348     001E  3469               	retlw	105	;'i'
   349     001F  3463               	retlw	99	;'c'
   350     0020  3461               	retlw	97	;'a'
   351     0021  3472               	retlw	114	;'r'
   352     0022  3464               	retlw	100	;'d'
   353     0023  346F               	retlw	111	;'o'
   354     0024  3400               	retlw	0
   355     0025                     STR_2:
   356     0025  3444               	retlw	68	;'D'
   357     0026  3461               	retlw	97	;'a'
   358     0027  346E               	retlw	110	;'n'
   359     0028  3469               	retlw	105	;'i'
   360     0029  3465               	retlw	101	;'e'
   361     002A  346C               	retlw	108	;'l'
   362     002B  3400               	retlw	0
   363     002C                     STR_3:
   364     002C  3425               	retlw	37	;'%'
   365     002D  3432               	retlw	50	;'2'
   366     002E  3464               	retlw	100	;'d'
   367     002F  3400               	retlw	0
   368                           
   369                           	psect	nvBANK0
   370     0037                     __pnvBANK0:
   371     0037                     _i2c_add:
   372     0037                     	ds	1
   373     0013                     _SSPBUF	set	19
   374     0014                     _SSPCON	set	20
   375     0063                     _SSPIF	set	99
   376     0047                     _RD7	set	71
   377     0093                     _SSPADD	set	147
   378     0094                     _SSPSTAT	set	148
   379     0091                     _SSPCON2	set	145
   380     0088                     _TRISD	set	136
   381     048B                     _RCEN	set	1163
   382     048E                     _ACKSTAT	set	1166
   383     048C                     _ACKEN	set	1164
   384     048D                     _ACKDT	set	1165
   385     048A                     _PEN	set	1162
   386     0489                     _RSEN	set	1161
   387     0488                     _SEN	set	1160
   388     043C                     _TRISC4	set	1084
   389     043B                     _TRISC3	set	1083
   390                           
   391                           	psect	cinit
   392     07F5                     start_initialization:	
   393                           ; #config settings
   394                           
   395     07F5                     __initialization:
   396                           
   397                           ; Initialize objects allocated to BANK0
   398     07F5  120A  118A  237E  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   399     07FA  00B8               	movwf	__pdataBANK0& (0+127)
   400                           
   401                           ; Clear objects allocated to COMMON
   402     07FB  01FD               	clrf	__pbssCOMMON& (0+127)
   403     07FC                     end_of_initialization:	
   404                           ;End of C runtime variable initialization code
   405                           
   406     07FC                     __end_of__initialization:
   407     07FC  0183               	clrf	3
   408     07FD  120A  118A  2D53   	ljmp	_main	;jump to C main() function
   409                           
   410                           	psect	bssCOMMON
   411     007D                     __pbssCOMMON:
   412     007D                     _RS:
   413     007D                     	ds	1
   414                           
   415                           	psect	dataBANK0
   416     0038                     __pdataBANK0:
   417     0038                     _BackLight_State:
   418     0038                     	ds	1
   419                           
   420                           	psect	cstackCOMMON
   421     0070                     __pcstackCOMMON:
   422     0070                     ?_isdigit:
   423     0070                     ?_I2C_Master_Init:	
   424                           ; 1 bit 
   425                           
   426     0070                     ??_I2C_Master_Init:	
   427                           ; 1 bytes @ 0x0
   428                           
   429     0070                     ?_LCD_Init:	
   430                           ; 1 bytes @ 0x0
   431                           
   432     0070                     ?_IO_Expander_Write:	
   433                           ; 1 bytes @ 0x0
   434                           
   435     0070                     ?_LCD_CMD:	
   436                           ; 1 bytes @ 0x0
   437                           
   438     0070                     ??_isdigit:	
   439                           ; 1 bytes @ 0x0
   440                           
   441     0070                     ?_main:	
   442                           ; 1 bytes @ 0x0
   443                           
   444     0070                     ?_I2C_Master_Wait:	
   445                           ; 1 bytes @ 0x0
   446                           
   447     0070                     ??_I2C_Master_Wait:	
   448                           ; 1 bytes @ 0x0
   449                           
   450     0070                     ?_I2C_Master_Start:	
   451                           ; 1 bytes @ 0x0
   452                           
   453     0070                     ??_I2C_Master_Start:	
   454                           ; 1 bytes @ 0x0
   455                           
   456     0070                     ?_I2C_Master_Stop:	
   457                           ; 1 bytes @ 0x0
   458                           
   459     0070                     ??_I2C_Master_Stop:	
   460                           ; 1 bytes @ 0x0
   461                           
   462     0070                     ?_I2C_Master_Write:	
   463                           ; 1 bytes @ 0x0
   464                           
   465     0070                     ??_I2C_Master_Write:	
   466                           ; 1 bytes @ 0x0
   467                           
   468     0070                     ?_LCD_Write_4Bit:	
   469                           ; 1 bytes @ 0x0
   470                           
   471     0070                     ?_LCD_Write_Char:	
   472                           ; 1 bytes @ 0x0
   473                           
   474     0070                     ?___wmul:	
   475                           ; 1 bytes @ 0x0
   476                           
   477     0070                     ?___lwdiv:	
   478                           ; 2 bytes @ 0x0
   479                           
   480     0070                     I2C_Master_Write@data:	
   481                           ; 2 bytes @ 0x0
   482                           
   483     0070                     _isdigit$608:	
   484                           ; 1 bytes @ 0x0
   485                           
   486     0070                     ___wmul@multiplier:	
   487                           ; 1 bytes @ 0x0
   488                           
   489     0070                     ___lwdiv@divisor:	
   490                           ; 2 bytes @ 0x0
   491                           
   492                           
   493                           ; 2 bytes @ 0x0
   494     0070                     	ds	1
   495     0071                     ??_IO_Expander_Write:
   496     0071                     IO_Expander_Write@Data:	
   497                           ; 1 bytes @ 0x1
   498                           
   499     0071                     isdigit@c:	
   500                           ; 1 bytes @ 0x1
   501                           
   502                           
   503                           ; 1 bytes @ 0x1
   504     0071                     	ds	1
   505     0072                     ??_LCD_Write_4Bit:
   506     0072                     ___wmul@multiplicand:	
   507                           ; 1 bytes @ 0x2
   508                           
   509     0072                     ___lwdiv@dividend:	
   510                           ; 2 bytes @ 0x2
   511                           
   512                           
   513                           ; 2 bytes @ 0x2
   514     0072                     	ds	1
   515     0073                     LCD_Write_4Bit@Nibble:
   516                           
   517                           ; 1 bytes @ 0x3
   518     0073                     	ds	1
   519     0074                     ??_LCD_CMD:
   520     0074                     ??_LCD_Write_Char:	
   521                           ; 1 bytes @ 0x4
   522                           
   523     0074                     ??___wmul:	
   524                           ; 1 bytes @ 0x4
   525                           
   526     0074                     ??___lwdiv:	
   527                           ; 1 bytes @ 0x4
   528                           
   529     0074                     ___wmul@product:	
   530                           ; 1 bytes @ 0x4
   531                           
   532     0074                     ___lwdiv@quotient:	
   533                           ; 2 bytes @ 0x4
   534                           
   535                           
   536                           ; 2 bytes @ 0x4
   537     0074                     	ds	1
   538     0075                     LCD_CMD@CMD:
   539     0075                     LCD_Write_Char@Data:	
   540                           ; 1 bytes @ 0x5
   541                           
   542                           
   543                           ; 1 bytes @ 0x5
   544     0075                     	ds	1
   545     0076                     ??_LCD_Init:
   546     0076                     ?_LCD_Set_Cursor:	
   547                           ; 1 bytes @ 0x6
   548                           
   549     0076                     ?_LCD_Write_String:	
   550                           ; 1 bytes @ 0x6
   551                           
   552     0076                     LCD_Set_Cursor@COL:	
   553                           ; 1 bytes @ 0x6
   554                           
   555     0076                     ___lwdiv@counter:	
   556                           ; 1 bytes @ 0x6
   557                           
   558     0076                     LCD_Write_String@Str:	
   559                           ; 1 bytes @ 0x6
   560                           
   561                           
   562                           ; 2 bytes @ 0x6
   563     0076                     	ds	1
   564     0077                     ??_LCD_Set_Cursor:
   565     0077                     ?___lwmod:	
   566                           ; 1 bytes @ 0x7
   567                           
   568     0077                     ___lwmod@divisor:	
   569                           ; 2 bytes @ 0x7
   570                           
   571                           
   572                           ; 2 bytes @ 0x7
   573     0077                     	ds	1
   574     0078                     ??_LCD_Write_String:
   575                           
   576                           ; 1 bytes @ 0x8
   577     0078                     	ds	1
   578     0079                     LCD_Init@I2C_Add:
   579     0079                     LCD_Set_Cursor@ROW:	
   580                           ; 1 bytes @ 0x9
   581                           
   582     0079                     ___lwmod@dividend:	
   583                           ; 1 bytes @ 0x9
   584                           
   585                           
   586                           ; 2 bytes @ 0x9
   587     0079                     	ds	2
   588     007B                     ??___lwmod:
   589     007B                     ___lwmod@counter:	
   590                           ; 1 bytes @ 0xB
   591                           
   592     007B                     LCD_Write_String@i:	
   593                           ; 1 bytes @ 0xB
   594                           
   595                           
   596                           ; 2 bytes @ 0xB
   597     007B                     	ds	2
   598                           
   599                           	psect	cstackBANK0
   600     0020                     __pcstackBANK0:
   601     0020                     ?_sprintf:
   602     0020                     sprintf@f:	
   603                           ; 2 bytes @ 0x0
   604                           
   605                           
   606                           ; 1 bytes @ 0x0
   607     0020                     	ds	3
   608     0023                     ??_sprintf:
   609                           
   610                           ; 1 bytes @ 0x3
   611     0023                     	ds	3
   612     0026                     sprintf@ap:
   613                           
   614                           ; 1 bytes @ 0x6
   615     0026                     	ds	1
   616     0027                     sprintf@prec:
   617                           
   618                           ; 1 bytes @ 0x7
   619     0027                     	ds	1
   620     0028                     sprintf@flag:
   621                           
   622                           ; 1 bytes @ 0x8
   623     0028                     	ds	1
   624     0029                     sprintf@val:
   625                           
   626                           ; 2 bytes @ 0x9
   627     0029                     	ds	2
   628     002B                     sprintf@sp:
   629                           
   630                           ; 1 bytes @ 0xB
   631     002B                     	ds	1
   632     002C                     sprintf@width:
   633                           
   634                           ; 2 bytes @ 0xC
   635     002C                     	ds	2
   636     002E                     sprintf@c:
   637                           
   638                           ; 1 bytes @ 0xE
   639     002E                     	ds	1
   640     002F                     ??_main:
   641                           
   642                           ; 1 bytes @ 0xF
   643     002F                     	ds	3
   644     0032                     main@str:
   645                           
   646                           ; 3 bytes @ 0x12
   647     0032                     	ds	3
   648     0035                     main@i:
   649                           
   650                           ; 2 bytes @ 0x15
   651     0035                     	ds	2
   652                           
   653                           	psect	maintext
   654     0553                     __pmaintext:	
   655 ;;
   656 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   657 ;;
   658 ;; *************** function _main *****************
   659 ;; Defined at:
   660 ;;		line 30 in file "main.c"
   661 ;; Parameters:    Size  Location     Type
   662 ;;		None
   663 ;; Auto vars:     Size  Location     Type
   664 ;;  str             3   18[BANK0 ] unsigned char [3]
   665 ;;  i               2   21[BANK0 ] int 
   666 ;; Return value:  Size  Location     Type
   667 ;;                  1    wreg      void 
   668 ;; Registers used:
   669 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   670 ;; Tracked objects:
   671 ;;		On entry : B00/0
   672 ;;		On exit  : 0/0
   673 ;;		Unchanged: 0/0
   674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   675 ;;      Params:         0       0       0       0       0
   676 ;;      Locals:         0       5       0       0       0
   677 ;;      Temps:          0       3       0       0       0
   678 ;;      Totals:         0       8       0       0       0
   679 ;;Total ram usage:        8 bytes
   680 ;; Hardware stack levels required when called: 6
   681 ;; This function calls:
   682 ;;		_I2C_Master_Init
   683 ;;		_LCD_Init
   684 ;;		_LCD_Set_Cursor
   685 ;;		_LCD_Write_String
   686 ;;		_sprintf
   687 ;; This function is called by:
   688 ;;		Startup code after reset
   689 ;; This function uses a non-reentrant model
   690 ;;
   691                           
   692     0553                     _main:	
   693                           ;psect for function _main
   694                           
   695     0553                     l1453:	
   696                           ;incstack = 0
   697                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   698                           
   699                           
   700                           ;main.c: 32:     I2C_Master_Init();
   701     0553  120A  118A  2391  120A  118A  	fcall	_I2C_Master_Init
   702     0558                     l1455:
   703                           
   704                           ;main.c: 34:     LCD_Init(0x4E);
   705     0558  304E               	movlw	78
   706     0559  120A  118A  25E3  120A  118A  	fcall	_LCD_Init
   707     055E                     l1457:
   708                           
   709                           ;main.c: 35:     LCD_Set_Cursor(1, 1);
   710     055E  01F6               	clrf	LCD_Set_Cursor@COL
   711     055F  0AF6               	incf	LCD_Set_Cursor@COL,f
   712     0560  3001               	movlw	1
   713     0561  120A  118A  245D  120A  118A  	fcall	_LCD_Set_Cursor
   714     0566                     l1459:
   715                           
   716                           ;main.c: 36:     LCD_Write_String("Ricardo");
   717     0566  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   718     0567  00F6               	movwf	LCD_Write_String@Str
   719     0568  3080               	movlw	128
   720     0569  00F7               	movwf	LCD_Write_String@Str+1
   721     056A  120A  118A  24CD  120A  118A  	fcall	_LCD_Write_String
   722     056F                     l1461:
   723                           
   724                           ;main.c: 37:     LCD_Set_Cursor(2, 1);
   725     056F  01F6               	clrf	LCD_Set_Cursor@COL
   726     0570  0AF6               	incf	LCD_Set_Cursor@COL,f
   727     0571  3002               	movlw	2
   728     0572  120A  118A  245D  120A  118A  	fcall	_LCD_Set_Cursor
   729     0577                     l1463:
   730                           
   731                           ;main.c: 38:     LCD_Write_String("Daniel");
   732     0577  3013               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   733     0578  00F6               	movwf	LCD_Write_String@Str
   734     0579  3080               	movlw	128
   735     057A  00F7               	movwf	LCD_Write_String@Str+1
   736     057B  120A  118A  24CD  120A  118A  	fcall	_LCD_Write_String
   737     0580                     l1465:
   738                           
   739                           ;main.c: 39:     TRISD = 0b00000000;
   740     0580  1683               	bsf	3,5	;RP0=1, select bank1
   741     0581  1303               	bcf	3,6	;RP1=0, select bank1
   742     0582  0188               	clrf	8	;volatile
   743     0583                     l1467:
   744                           
   745                           ;main.c: 42:       int i;;main.c: 43:       for (i = 0; i<100; i++){
   746     0583  1283               	bcf	3,5	;RP0=0, select bank0
   747     0584  1303               	bcf	3,6	;RP1=0, select bank0
   748     0585  01B5               	clrf	main@i
   749     0586  01B6               	clrf	main@i+1
   750     0587                     l22:
   751                           
   752                           ;main.c: 44:         RD7 = 0;
   753     0587  1283               	bcf	3,5	;RP0=0, select bank0
   754     0588  1303               	bcf	3,6	;RP1=0, select bank0
   755     0589  1388               	bcf	8,7	;volatile
   756     058A                     l1473:
   757                           
   758                           ;main.c: 45:         _delay((unsigned long)((100)*(16000000/4000.0)));
   759     058A  3003               	movlw	3
   760     058B  1283               	bcf	3,5	;RP0=0, select bank0
   761     058C  1303               	bcf	3,6	;RP1=0, select bank0
   762     058D  00B1               	movwf	??_main+2
   763     058E  3008               	movlw	8
   764     058F  00B0               	movwf	??_main+1
   765     0590  3076               	movlw	118
   766     0591  00AF               	movwf	??_main
   767     0592                     u877:
   768     0592  0BAF               	decfsz	??_main,f
   769     0593  2D92               	goto	u877
   770     0594  0BB0               	decfsz	??_main+1,f
   771     0595  2D92               	goto	u877
   772     0596  0BB1               	decfsz	??_main+2,f
   773     0597  2D92               	goto	u877
   774     0598  0000               	nop
   775     0599                     l1475:
   776                           
   777                           ;main.c: 46:         RD7 = 1;
   778     0599  1283               	bcf	3,5	;RP0=0, select bank0
   779     059A  1303               	bcf	3,6	;RP1=0, select bank0
   780     059B  1788               	bsf	8,7	;volatile
   781                           
   782                           ;main.c: 47:         _delay((unsigned long)((100)*(16000000/4000.0)));
   783     059C  3003               	movlw	3
   784     059D  1283               	bcf	3,5	;RP0=0, select bank0
   785     059E  1303               	bcf	3,6	;RP1=0, select bank0
   786     059F  00B1               	movwf	??_main+2
   787     05A0  3008               	movlw	8
   788     05A1  00B0               	movwf	??_main+1
   789     05A2  3076               	movlw	118
   790     05A3  00AF               	movwf	??_main
   791     05A4                     u887:
   792     05A4  0BAF               	decfsz	??_main,f
   793     05A5  2DA4               	goto	u887
   794     05A6  0BB0               	decfsz	??_main+1,f
   795     05A7  2DA4               	goto	u887
   796     05A8  0BB1               	decfsz	??_main+2,f
   797     05A9  2DA4               	goto	u887
   798     05AA  0000               	nop
   799     05AB                     l1477:
   800                           
   801                           ;main.c: 48:         LCD_Set_Cursor(1, 15);
   802     05AB  300F               	movlw	15
   803     05AC  00F6               	movwf	LCD_Set_Cursor@COL
   804     05AD  3001               	movlw	1
   805     05AE  120A  118A  245D  120A  118A  	fcall	_LCD_Set_Cursor
   806     05B3                     l1479:
   807                           
   808                           ;main.c: 50:         char str[3];;main.c: 51:         sprintf(str, "%2d", i);
   809     05B3  301A               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   810     05B4  1283               	bcf	3,5	;RP0=0, select bank0
   811     05B5  1303               	bcf	3,6	;RP1=0, select bank0
   812     05B6  00A0               	movwf	sprintf@f
   813     05B7  0836               	movf	main@i+1,w
   814     05B8  00A2               	movwf	?_sprintf+2
   815     05B9  0835               	movf	main@i,w
   816     05BA  00A1               	movwf	?_sprintf+1
   817     05BB  3032               	movlw	(low (main@str| 0))& (0+255)
   818     05BC  120A  118A  267F  120A  118A  	fcall	_sprintf
   819     05C1                     l1481:
   820                           
   821                           ;main.c: 52:         LCD_Write_String(str);
   822     05C1  3032               	movlw	(low (main@str| 0))& (0+255)
   823     05C2  00F6               	movwf	LCD_Write_String@Str
   824     05C3  3000               	movlw	0
   825     05C4  00F7               	movwf	LCD_Write_String@Str+1
   826     05C5  120A  118A  24CD  120A  118A  	fcall	_LCD_Write_String
   827     05CA                     l1483:
   828                           
   829                           ;main.c: 53:       }
   830     05CA  3001               	movlw	1
   831     05CB  1283               	bcf	3,5	;RP0=0, select bank0
   832     05CC  1303               	bcf	3,6	;RP1=0, select bank0
   833     05CD  07B5               	addwf	main@i,f
   834     05CE  1803               	skipnc
   835     05CF  0AB6               	incf	main@i+1,f
   836     05D0  3000               	movlw	0
   837     05D1  07B6               	addwf	main@i+1,f
   838     05D2                     l1485:
   839     05D2  0836               	movf	main@i+1,w
   840     05D3  3A80               	xorlw	128
   841     05D4  00FF               	movwf	btemp+1
   842     05D5  3080               	movlw	128
   843     05D6  027F               	subwf	btemp+1,w
   844     05D7  1D03               	skipz
   845     05D8  2DDB               	goto	u855
   846     05D9  3064               	movlw	100
   847     05DA  0235               	subwf	main@i,w
   848     05DB                     u855:
   849     05DB  1C03               	skipc
   850     05DC  2DDE               	goto	u851
   851     05DD  2DDF               	goto	u850
   852     05DE                     u851:
   853     05DE  2D87               	goto	l22
   854     05DF                     u850:
   855     05DF  2D83               	goto	l1467
   856     05E0  120A  118A  2800   	ljmp	start
   857     05E3                     __end_of_main:
   858                           
   859                           	psect	text1
   860     067F                     __ptext1:	
   861 ;; *************** function _sprintf *****************
   862 ;; Defined at:
   863 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
   864 ;; Parameters:    Size  Location     Type
   865 ;;  sp              1    wreg     PTR unsigned char 
   866 ;;		 -> main@str(3), 
   867 ;;  f               1    0[BANK0 ] PTR const unsigned char 
   868 ;;		 -> STR_3(4), 
   869 ;; Auto vars:     Size  Location     Type
   870 ;;  sp              1   11[BANK0 ] PTR unsigned char 
   871 ;;		 -> main@str(3), 
   872 ;;  tmpval          4    0        struct .
   873 ;;  width           2   12[BANK0 ] int 
   874 ;;  val             2    9[BANK0 ] unsigned int 
   875 ;;  cp              2    0        PTR const unsigned char 
   876 ;;  len             2    0        unsigned int 
   877 ;;  c               1   14[BANK0 ] unsigned char 
   878 ;;  flag            1    8[BANK0 ] unsigned char 
   879 ;;  prec            1    7[BANK0 ] char 
   880 ;;  ap              1    6[BANK0 ] PTR void [1]
   881 ;;		 -> ?_sprintf(2), 
   882 ;; Return value:  Size  Location     Type
   883 ;;                  2    0[BANK0 ] int 
   884 ;; Registers used:
   885 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   886 ;; Tracked objects:
   887 ;;		On entry : 0/0
   888 ;;		On exit  : 0/0
   889 ;;		Unchanged: 0/0
   890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   891 ;;      Params:         0       3       0       0       0
   892 ;;      Locals:         0       9       0       0       0
   893 ;;      Temps:          0       3       0       0       0
   894 ;;      Totals:         0      15       0       0       0
   895 ;;Total ram usage:       15 bytes
   896 ;; Hardware stack levels used: 1
   897 ;; Hardware stack levels required when called: 1
   898 ;; This function calls:
   899 ;;		___lwdiv
   900 ;;		___lwmod
   901 ;;		___wmul
   902 ;;		_isdigit
   903 ;; This function is called by:
   904 ;;		_main
   905 ;; This function uses a non-reentrant model
   906 ;;
   907                           
   908     067F                     _sprintf:	
   909                           ;psect for function _sprintf
   910                           
   911                           
   912                           ;incstack = 0
   913                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   914                           ;sprintf@sp stored from wreg
   915     067F  1283               	bcf	3,5	;RP0=0, select bank0
   916     0680  1303               	bcf	3,6	;RP1=0, select bank0
   917     0681  00AB               	movwf	sprintf@sp
   918     0682                     l1359:
   919                           
   920                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
   921     0682  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
   922     0683  00A6               	movwf	sprintf@ap
   923                           
   924                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   925     0684  2FE0               	goto	l1443
   926     0685                     l1361:
   927                           
   928                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
   929     0685  3025               	movlw	37
   930     0686  062E               	xorwf	sprintf@c,w
   931     0687  1903               	btfsc	3,2
   932     0688  2E8A               	goto	u711
   933     0689  2E8B               	goto	u710
   934     068A                     u711:
   935     068A  2E95               	goto	l1367
   936     068B                     u710:
   937     068B                     l1363:
   938                           
   939                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
   940     068B  082B               	movf	sprintf@sp,w
   941     068C  0084               	movwf	4
   942     068D  082E               	movf	sprintf@c,w
   943     068E  1383               	bcf	3,7	;select IRP bank0
   944     068F  0080               	movwf	0
   945     0690                     l1365:
   946     0690  3001               	movlw	1
   947     0691  00FF               	movwf	btemp+1
   948     0692  087F               	movf	btemp+1,w
   949     0693  07AB               	addwf	sprintf@sp,f
   950                           
   951                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 559:    continue;
   952     0694  2FE0               	goto	l1443
   953     0695                     l1367:
   954                           
   955                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 563:   width = 0;
   956     0695  01AC               	clrf	sprintf@width
   957     0696  01AD               	clrf	sprintf@width+1
   958                           
   959                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
   960     0697  01A8               	clrf	sprintf@flag
   961     0698                     l1369:
   962                           
   963                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
   964     0698  0820               	movf	sprintf@f,w
   965     0699  0084               	movwf	4
   966     069A  120A  118A  200D  120A  118A  	fcall	stringdir
   967     069F  120A  118A  23BB  120A  118A  	fcall	_isdigit
   968     06A4  1C03               	btfss	3,0
   969     06A5  2EA7               	goto	u721
   970     06A6  2EA8               	goto	u720
   971     06A7                     u721:
   972     06A7  2EE8               	goto	l1383
   973     06A8                     u720:
   974     06A8                     l1371:
   975                           
   976                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
   977     06A8  1283               	bcf	3,5	;RP0=0, select bank0
   978     06A9  1303               	bcf	3,6	;RP1=0, select bank0
   979     06AA  01AC               	clrf	sprintf@width
   980     06AB  01AD               	clrf	sprintf@width+1
   981     06AC                     l1373:
   982                           
   983                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
   984     06AC  300A               	movlw	10
   985     06AD  00F0               	movwf	___wmul@multiplier
   986     06AE  3000               	movlw	0
   987     06AF  00F1               	movwf	___wmul@multiplier+1
   988     06B0  1283               	bcf	3,5	;RP0=0, select bank0
   989     06B1  1303               	bcf	3,6	;RP1=0, select bank0
   990     06B2  082D               	movf	sprintf@width+1,w
   991     06B3  00F3               	movwf	___wmul@multiplicand+1
   992     06B4  082C               	movf	sprintf@width,w
   993     06B5  00F2               	movwf	___wmul@multiplicand
   994     06B6  120A  118A  2438  120A  118A  	fcall	___wmul
   995     06BB  0871               	movf	?___wmul+1,w
   996     06BC  1283               	bcf	3,5	;RP0=0, select bank0
   997     06BD  1303               	bcf	3,6	;RP1=0, select bank0
   998     06BE  00AD               	movwf	sprintf@width+1
   999     06BF  0870               	movf	?___wmul,w
  1000     06C0  00AC               	movwf	sprintf@width
  1001     06C1                     l1375:
  1002                           
  1003                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1004     06C1  0820               	movf	sprintf@f,w
  1005     06C2  0084               	movwf	4
  1006     06C3  120A  118A  200D  120A  118A  	fcall	stringdir
  1007     06C8  3ED0               	addlw	208
  1008     06C9  00A3               	movwf	??_sprintf
  1009     06CA  30FF               	movlw	255
  1010     06CB  1803               	skipnc
  1011     06CC  3000               	movlw	0
  1012     06CD  00A4               	movwf	??_sprintf+1
  1013     06CE  0823               	movf	??_sprintf,w
  1014     06CF  07AC               	addwf	sprintf@width,f
  1015     06D0  1803               	skipnc
  1016     06D1  0AAD               	incf	sprintf@width+1,f
  1017     06D2  0824               	movf	??_sprintf+1,w
  1018     06D3  07AD               	addwf	sprintf@width+1,f
  1019     06D4                     l1377:
  1020     06D4  3001               	movlw	1
  1021     06D5  00FF               	movwf	btemp+1
  1022     06D6  087F               	movf	btemp+1,w
  1023     06D7  07A0               	addwf	sprintf@f,f
  1024     06D8                     l1379:
  1025                           
  1026                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1027     06D8  0820               	movf	sprintf@f,w
  1028     06D9  0084               	movwf	4
  1029     06DA  120A  118A  200D  120A  118A  	fcall	stringdir
  1030     06DF  120A  118A  23BB  120A  118A  	fcall	_isdigit
  1031     06E4  1803               	btfsc	3,0
  1032     06E5  2EE7               	goto	u731
  1033     06E6  2EE8               	goto	u730
  1034     06E7                     u731:
  1035     06E7  2EAC               	goto	l1373
  1036     06E8                     u730:
  1037     06E8                     l1383:
  1038     06E8  3001               	movlw	1
  1039     06E9  1283               	bcf	3,5	;RP0=0, select bank0
  1040     06EA  1303               	bcf	3,6	;RP1=0, select bank0
  1041     06EB  07A0               	addwf	sprintf@f,f
  1042     06EC  30FF               	movlw	-1
  1043     06ED  0720               	addwf	sprintf@f,w
  1044     06EE  0084               	movwf	4
  1045     06EF  120A  118A  200D  120A  118A  	fcall	stringdir
  1046     06F4  00AE               	movwf	sprintf@c
  1047     06F5  00A3               	movwf	??_sprintf
  1048     06F6  01A4               	clrf	??_sprintf+1
  1049                           
  1050                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1051                           ; Switch size 1, requested type "simple"
  1052                           ; Number of cases is 1, Range of values is 0 to 0
  1053                           ; switch strategies available:
  1054                           ; Name         Instructions Cycles
  1055                           ; simple_byte            4     3 (average)
  1056                           ; direct_byte           11     8 (fixed)
  1057                           ; jumptable            260     6 (fixed)
  1058                           ;	Chosen strategy is simple_byte
  1059     06F7  0824               	movf	??_sprintf+1,w
  1060     06F8  3A00               	xorlw	0	; case 0
  1061     06F9  1903               	skipnz
  1062     06FA  2EFC               	goto	l1573
  1063     06FB  2FE0               	goto	l1443
  1064     06FC                     l1573:
  1065                           
  1066                           ; Switch size 1, requested type "simple"
  1067                           ; Number of cases is 3, Range of values is 0 to 105
  1068                           ; switch strategies available:
  1069                           ; Name         Instructions Cycles
  1070                           ; simple_byte           10     6 (average)
  1071                           ; jumptable            260     6 (fixed)
  1072                           ;	Chosen strategy is simple_byte
  1073     06FC  0823               	movf	??_sprintf,w
  1074     06FD  3A00               	xorlw	0	; case 0
  1075     06FE  1903               	skipnz
  1076     06FF  2FF0               	goto	l1445
  1077     0700  3A64               	xorlw	100	; case 100
  1078     0701  1903               	skipnz
  1079     0702  2F07               	goto	l1385
  1080     0703  3A0D               	xorlw	13	; case 105
  1081     0704  1903               	skipnz
  1082     0705  2F07               	goto	l1385
  1083     0706  2FE0               	goto	l1443
  1084     0707                     l1385:
  1085                           
  1086                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1087     0707  0826               	movf	sprintf@ap,w
  1088     0708  0084               	movwf	4
  1089     0709  1383               	bcf	3,7	;select IRP bank0
  1090     070A  0800               	movf	0,w
  1091     070B  00A9               	movwf	sprintf@val
  1092     070C  0A84               	incf	4,f
  1093     070D  0800               	movf	0,w
  1094     070E  00AA               	movwf	sprintf@val+1
  1095     070F                     l1387:
  1096     070F  3002               	movlw	2
  1097     0710  00FF               	movwf	btemp+1
  1098     0711  087F               	movf	btemp+1,w
  1099     0712  07A6               	addwf	sprintf@ap,f
  1100     0713                     l1389:
  1101                           
  1102                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1103     0713  1FAA               	btfss	sprintf@val+1,7
  1104     0714  2F16               	goto	u741
  1105     0715  2F17               	goto	u740
  1106     0716                     u741:
  1107     0716  2F20               	goto	l1395
  1108     0717                     u740:
  1109     0717                     l1391:
  1110                           
  1111                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1112     0717  3003               	movlw	3
  1113     0718  00FF               	movwf	btemp+1
  1114     0719  087F               	movf	btemp+1,w
  1115     071A  04A8               	iorwf	sprintf@flag,f
  1116     071B                     l1393:
  1117                           
  1118                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1119     071B  09A9               	comf	sprintf@val,f
  1120     071C  09AA               	comf	sprintf@val+1,f
  1121     071D  0AA9               	incf	sprintf@val,f
  1122     071E  1903               	skipnz
  1123     071F  0AAA               	incf	sprintf@val+1,f
  1124     0720                     l1395:
  1125                           
  1126                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1127     0720  01AE               	clrf	sprintf@c
  1128     0721  0AAE               	incf	sprintf@c,f
  1129     0722                     l1401:
  1130                           
  1131                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1132     0722  082E               	movf	sprintf@c,w
  1133     0723  00A3               	movwf	??_sprintf
  1134     0724  0723               	addwf	??_sprintf,w
  1135     0725  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1136     0726  0084               	movwf	4
  1137     0727  120A  118A  200D  120A  118A  	fcall	stringdir
  1138     072C  00A4               	movwf	??_sprintf+1
  1139     072D  120A  118A  200D  120A  118A  	fcall	stringdir
  1140     0732  00A5               	movwf	??_sprintf+2
  1141     0733  0825               	movf	??_sprintf+2,w
  1142     0734  022A               	subwf	sprintf@val+1,w
  1143     0735  1D03               	skipz
  1144     0736  2F39               	goto	u755
  1145     0737  0824               	movf	??_sprintf+1,w
  1146     0738  0229               	subwf	sprintf@val,w
  1147     0739                     u755:
  1148     0739  1803               	skipnc
  1149     073A  2F3C               	goto	u751
  1150     073B  2F3D               	goto	u750
  1151     073C                     u751:
  1152     073C  2F3E               	goto	l1405
  1153     073D                     u750:
  1154     073D  2F48               	goto	l1409
  1155     073E                     l1405:
  1156     073E  3001               	movlw	1
  1157     073F  00FF               	movwf	btemp+1
  1158     0740  087F               	movf	btemp+1,w
  1159     0741  07AE               	addwf	sprintf@c,f
  1160     0742                     l1407:
  1161     0742  3005               	movlw	5
  1162     0743  062E               	xorwf	sprintf@c,w
  1163     0744  1D03               	btfss	3,2
  1164     0745  2F47               	goto	u761
  1165     0746  2F48               	goto	u760
  1166     0747                     u761:
  1167     0747  2F22               	goto	l1401
  1168     0748                     u760:
  1169     0748                     l1409:
  1170                           
  1171                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  1172     0748  082C               	movf	sprintf@width,w
  1173     0749  042D               	iorwf	sprintf@width+1,w
  1174     074A  1903               	btfsc	3,2
  1175     074B  2F4D               	goto	u771
  1176     074C  2F4E               	goto	u770
  1177     074D                     u771:
  1178     074D  2F5A               	goto	l259
  1179     074E                     u770:
  1180     074E                     l1411:
  1181     074E  0828               	movf	sprintf@flag,w
  1182     074F  3903               	andlw	3
  1183     0750  1903               	btfsc	3,2
  1184     0751  2F53               	goto	u781
  1185     0752  2F54               	goto	u780
  1186     0753                     u781:
  1187     0753  2F5A               	goto	l259
  1188     0754                     u780:
  1189     0754                     l1413:
  1190                           
  1191                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1372:    width--;
  1192     0754  30FF               	movlw	255
  1193     0755  07AC               	addwf	sprintf@width,f
  1194     0756  1803               	skipnc
  1195     0757  0AAD               	incf	sprintf@width+1,f
  1196     0758  30FF               	movlw	255
  1197     0759  07AD               	addwf	sprintf@width+1,f
  1198     075A                     l259:
  1199                           
  1200                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  1201     075A  082D               	movf	sprintf@width+1,w
  1202     075B  3A80               	xorlw	128
  1203     075C  3C80               	sublw	128
  1204     075D  1D03               	skipz
  1205     075E  2F61               	goto	u795
  1206     075F  082C               	movf	sprintf@width,w
  1207     0760  022E               	subwf	sprintf@c,w
  1208     0761                     u795:
  1209     0761  1803               	skipnc
  1210     0762  2F64               	goto	u791
  1211     0763  2F65               	goto	u790
  1212     0764                     u791:
  1213     0764  2F71               	goto	l1417
  1214     0765                     u790:
  1215     0765                     l1415:
  1216                           
  1217                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  1218     0765  1283               	bcf	3,5	;RP0=0, select bank0
  1219     0766  1303               	bcf	3,6	;RP1=0, select bank0
  1220     0767  082E               	movf	sprintf@c,w
  1221     0768  00A3               	movwf	??_sprintf
  1222     0769  01A4               	clrf	??_sprintf+1
  1223     076A  0823               	movf	??_sprintf,w
  1224     076B  02AC               	subwf	sprintf@width,f
  1225     076C  0824               	movf	??_sprintf+1,w
  1226     076D  1C03               	skipc
  1227     076E  03AD               	decf	sprintf@width+1,f
  1228     076F  02AD               	subwf	sprintf@width+1,f
  1229     0770  2F75               	goto	l1419
  1230     0771                     l1417:
  1231                           
  1232                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  1233     0771  1283               	bcf	3,5	;RP0=0, select bank0
  1234     0772  1303               	bcf	3,6	;RP1=0, select bank0
  1235     0773  01AC               	clrf	sprintf@width
  1236     0774  01AD               	clrf	sprintf@width+1
  1237     0775                     l1419:
  1238                           
  1239                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1450:    if(width
  1240     0775  082C               	movf	sprintf@width,w
  1241     0776  042D               	iorwf	sprintf@width+1,w
  1242     0777  1903               	btfsc	3,2
  1243     0778  2F7A               	goto	u801
  1244     0779  2F7B               	goto	u800
  1245     077A                     u801:
  1246     077A  2F90               	goto	l1427
  1247     077B                     u800:
  1248     077B                     l1421:
  1249                           
  1250                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  1251     077B  082B               	movf	sprintf@sp,w
  1252     077C  0084               	movwf	4
  1253     077D  3020               	movlw	32
  1254     077E  1383               	bcf	3,7	;select IRP bank0
  1255     077F  0080               	movwf	0
  1256     0780                     l1423:
  1257     0780  3001               	movlw	1
  1258     0781  00FF               	movwf	btemp+1
  1259     0782  087F               	movf	btemp+1,w
  1260     0783  07AB               	addwf	sprintf@sp,f
  1261     0784                     l1425:
  1262     0784  30FF               	movlw	255
  1263     0785  07AC               	addwf	sprintf@width,f
  1264     0786  1803               	skipnc
  1265     0787  0AAD               	incf	sprintf@width+1,f
  1266     0788  30FF               	movlw	255
  1267     0789  07AD               	addwf	sprintf@width+1,f
  1268     078A  082C               	movf	sprintf@width,w
  1269     078B  042D               	iorwf	sprintf@width+1,w
  1270     078C  1D03               	btfss	3,2
  1271     078D  2F8F               	goto	u811
  1272     078E  2F90               	goto	u810
  1273     078F                     u811:
  1274     078F  2F7B               	goto	l1421
  1275     0790                     u810:
  1276     0790                     l1427:
  1277                           
  1278                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  1279     0790  0828               	movf	sprintf@flag,w
  1280     0791  3903               	andlw	3
  1281     0792  1903               	btfsc	3,2
  1282     0793  2F95               	goto	u821
  1283     0794  2F96               	goto	u820
  1284     0795                     u821:
  1285     0795  2F9F               	goto	l1433
  1286     0796                     u820:
  1287     0796                     l1429:
  1288                           
  1289                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1290     0796  082B               	movf	sprintf@sp,w
  1291     0797  0084               	movwf	4
  1292     0798  302D               	movlw	45
  1293     0799  1383               	bcf	3,7	;select IRP bank0
  1294     079A  0080               	movwf	0
  1295     079B                     l1431:
  1296     079B  3001               	movlw	1
  1297     079C  00FF               	movwf	btemp+1
  1298     079D  087F               	movf	btemp+1,w
  1299     079E  07AB               	addwf	sprintf@sp,f
  1300     079F                     l1433:
  1301                           
  1302                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1303     079F  082E               	movf	sprintf@c,w
  1304     07A0  00A7               	movwf	sprintf@prec
  1305                           
  1306                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1307     07A1  2FD7               	goto	l1441
  1308     07A2                     l1435:
  1309                           
  1310                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1311     07A2  300A               	movlw	10
  1312     07A3  00F7               	movwf	___lwmod@divisor
  1313     07A4  3000               	movlw	0
  1314     07A5  00F8               	movwf	___lwmod@divisor+1
  1315     07A6  0827               	movf	sprintf@prec,w
  1316     07A7  00A3               	movwf	??_sprintf
  1317     07A8  0723               	addwf	??_sprintf,w
  1318     07A9  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1319     07AA  0084               	movwf	4
  1320     07AB  120A  118A  200D  120A  118A  	fcall	stringdir
  1321     07B0  00F0               	movwf	___lwdiv@divisor
  1322     07B1  120A  118A  200D  120A  118A  	fcall	stringdir
  1323     07B6  00F1               	movwf	___lwdiv@divisor+1
  1324     07B7  082A               	movf	sprintf@val+1,w
  1325     07B8  00F3               	movwf	___lwdiv@dividend+1
  1326     07B9  0829               	movf	sprintf@val,w
  1327     07BA  00F2               	movwf	___lwdiv@dividend
  1328     07BB  120A  118A  250F  120A  118A  	fcall	___lwdiv
  1329     07C0  0871               	movf	?___lwdiv+1,w
  1330     07C1  00FA               	movwf	___lwmod@dividend+1
  1331     07C2  0870               	movf	?___lwdiv,w
  1332     07C3  00F9               	movwf	___lwmod@dividend
  1333     07C4  120A  118A  2493  120A  118A  	fcall	___lwmod
  1334     07C9  0877               	movf	?___lwmod,w
  1335     07CA  3E30               	addlw	48
  1336     07CB  1283               	bcf	3,5	;RP0=0, select bank0
  1337     07CC  1303               	bcf	3,6	;RP1=0, select bank0
  1338     07CD  00AE               	movwf	sprintf@c
  1339     07CE                     l1437:
  1340                           
  1341                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1342     07CE  082B               	movf	sprintf@sp,w
  1343     07CF  0084               	movwf	4
  1344     07D0  082E               	movf	sprintf@c,w
  1345     07D1  1383               	bcf	3,7	;select IRP bank0
  1346     07D2  0080               	movwf	0
  1347     07D3                     l1439:
  1348     07D3  3001               	movlw	1
  1349     07D4  00FF               	movwf	btemp+1
  1350     07D5  087F               	movf	btemp+1,w
  1351     07D6  07AB               	addwf	sprintf@sp,f
  1352     07D7                     l1441:
  1353                           
  1354                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1355     07D7  30FF               	movlw	255
  1356     07D8  00FF               	movwf	btemp+1
  1357     07D9  087F               	movf	btemp+1,w
  1358     07DA  07A7               	addwf	sprintf@prec,f
  1359     07DB  0A27               	incf	sprintf@prec,w
  1360     07DC  1D03               	btfss	3,2
  1361     07DD  2FDF               	goto	u831
  1362     07DE  2FE0               	goto	u830
  1363     07DF                     u831:
  1364     07DF  2FA2               	goto	l1435
  1365     07E0                     u830:
  1366     07E0                     l1443:
  1367                           
  1368                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1369     07E0  3001               	movlw	1
  1370     07E1  07A0               	addwf	sprintf@f,f
  1371     07E2  30FF               	movlw	-1
  1372     07E3  0720               	addwf	sprintf@f,w
  1373     07E4  0084               	movwf	4
  1374     07E5  120A  118A  200D  120A  118A  	fcall	stringdir
  1375     07EA  00AE               	movwf	sprintf@c
  1376     07EB  082E               	movf	sprintf@c,w
  1377     07EC  1D03               	btfss	3,2
  1378     07ED  2FEF               	goto	u841
  1379     07EE  2FF0               	goto	u840
  1380     07EF                     u841:
  1381     07EF  2E85               	goto	l1361
  1382     07F0                     u840:
  1383     07F0                     l1445:
  1384                           
  1385                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1386     07F0  082B               	movf	sprintf@sp,w
  1387     07F1  0084               	movwf	4
  1388     07F2  1383               	bcf	3,7	;select IRP bank0
  1389     07F3  0180               	clrf	0
  1390     07F4                     l270:
  1391     07F4  0008               	return
  1392     07F5                     __end_of_sprintf:
  1393                           
  1394                           	psect	text2
  1395     03BB                     __ptext2:	
  1396 ;; *************** function _isdigit *****************
  1397 ;; Defined at:
  1398 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\isdigit.c"
  1399 ;; Parameters:    Size  Location     Type
  1400 ;;  c               1    wreg     unsigned char 
  1401 ;; Auto vars:     Size  Location     Type
  1402 ;;  c               1    1[COMMON] unsigned char 
  1403 ;; Return value:  Size  Location     Type
  1404 ;;		None               void
  1405 ;; Registers used:
  1406 ;;		wreg, status,2, status,0
  1407 ;; Tracked objects:
  1408 ;;		On entry : 0/0
  1409 ;;		On exit  : 0/0
  1410 ;;		Unchanged: 0/0
  1411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1412 ;;      Params:         0       0       0       0       0
  1413 ;;      Locals:         2       0       0       0       0
  1414 ;;      Temps:          0       0       0       0       0
  1415 ;;      Totals:         2       0       0       0       0
  1416 ;;Total ram usage:        2 bytes
  1417 ;; Hardware stack levels used: 1
  1418 ;; This function calls:
  1419 ;;		Nothing
  1420 ;; This function is called by:
  1421 ;;		_sprintf
  1422 ;; This function uses a non-reentrant model
  1423 ;;
  1424                           
  1425     03BB                     _isdigit:	
  1426                           ;psect for function _isdigit
  1427                           
  1428                           
  1429                           ;incstack = 0
  1430                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  1431                           ;isdigit@c stored from wreg
  1432     03BB  00F1               	movwf	isdigit@c
  1433     03BC                     l1213:
  1434     03BC  01F0               	clrf	_isdigit$608
  1435     03BD                     l1215:
  1436     03BD  303A               	movlw	58
  1437     03BE  0271               	subwf	isdigit@c,w
  1438     03BF  1803               	skipnc
  1439     03C0  2BC2               	goto	u491
  1440     03C1  2BC3               	goto	u490
  1441     03C2                     u491:
  1442     03C2  2BCB               	goto	l1221
  1443     03C3                     u490:
  1444     03C3                     l1217:
  1445     03C3  3030               	movlw	48
  1446     03C4  0271               	subwf	isdigit@c,w
  1447     03C5  1C03               	skipc
  1448     03C6  2BC8               	goto	u501
  1449     03C7  2BC9               	goto	u500
  1450     03C8                     u501:
  1451     03C8  2BCB               	goto	l1221
  1452     03C9                     u500:
  1453     03C9                     l1219:
  1454     03C9  01F0               	clrf	_isdigit$608
  1455     03CA  0AF0               	incf	_isdigit$608,f
  1456     03CB                     l1221:
  1457     03CB  0C70               	rrf	_isdigit$608,w
  1458     03CC                     l727:
  1459     03CC  0008               	return
  1460     03CD                     __end_of_isdigit:
  1461                           
  1462                           	psect	text3
  1463     0438                     __ptext3:	
  1464 ;; *************** function ___wmul *****************
  1465 ;; Defined at:
  1466 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
  1467 ;; Parameters:    Size  Location     Type
  1468 ;;  multiplier      2    0[COMMON] unsigned int 
  1469 ;;  multiplicand    2    2[COMMON] unsigned int 
  1470 ;; Auto vars:     Size  Location     Type
  1471 ;;  product         2    4[COMMON] unsigned int 
  1472 ;; Return value:  Size  Location     Type
  1473 ;;                  2    0[COMMON] unsigned int 
  1474 ;; Registers used:
  1475 ;;		wreg, status,2, status,0
  1476 ;; Tracked objects:
  1477 ;;		On entry : 0/0
  1478 ;;		On exit  : 0/0
  1479 ;;		Unchanged: 0/0
  1480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1481 ;;      Params:         4       0       0       0       0
  1482 ;;      Locals:         2       0       0       0       0
  1483 ;;      Temps:          0       0       0       0       0
  1484 ;;      Totals:         6       0       0       0       0
  1485 ;;Total ram usage:        6 bytes
  1486 ;; Hardware stack levels used: 1
  1487 ;; This function calls:
  1488 ;;		Nothing
  1489 ;; This function is called by:
  1490 ;;		_sprintf
  1491 ;; This function uses a non-reentrant model
  1492 ;;
  1493                           
  1494     0438                     ___wmul:	
  1495                           ;psect for function ___wmul
  1496                           
  1497     0438                     l1225:	
  1498                           ;incstack = 0
  1499                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1500                           
  1501     0438  01F4               	clrf	___wmul@product
  1502     0439  01F5               	clrf	___wmul@product+1
  1503     043A                     l1227:
  1504     043A  1C70               	btfss	___wmul@multiplier,0
  1505     043B  2C3D               	goto	u511
  1506     043C  2C3E               	goto	u510
  1507     043D                     u511:
  1508     043D  2C44               	goto	l274
  1509     043E                     u510:
  1510     043E                     l1229:
  1511     043E  0872               	movf	___wmul@multiplicand,w
  1512     043F  07F4               	addwf	___wmul@product,f
  1513     0440  1803               	skipnc
  1514     0441  0AF5               	incf	___wmul@product+1,f
  1515     0442  0873               	movf	___wmul@multiplicand+1,w
  1516     0443  07F5               	addwf	___wmul@product+1,f
  1517     0444                     l274:
  1518     0444  3001               	movlw	1
  1519     0445                     u525:
  1520     0445  1003               	clrc
  1521     0446  0DF2               	rlf	___wmul@multiplicand,f
  1522     0447  0DF3               	rlf	___wmul@multiplicand+1,f
  1523     0448  3EFF               	addlw	-1
  1524     0449  1D03               	skipz
  1525     044A  2C45               	goto	u525
  1526     044B                     l1231:
  1527     044B  3001               	movlw	1
  1528     044C                     u535:
  1529     044C  1003               	clrc
  1530     044D  0CF1               	rrf	___wmul@multiplier+1,f
  1531     044E  0CF0               	rrf	___wmul@multiplier,f
  1532     044F  3EFF               	addlw	-1
  1533     0450  1D03               	skipz
  1534     0451  2C4C               	goto	u535
  1535     0452                     l1233:
  1536     0452  0870               	movf	___wmul@multiplier,w
  1537     0453  0471               	iorwf	___wmul@multiplier+1,w
  1538     0454  1D03               	btfss	3,2
  1539     0455  2C57               	goto	u541
  1540     0456  2C58               	goto	u540
  1541     0457                     u541:
  1542     0457  2C3A               	goto	l1227
  1543     0458                     u540:
  1544     0458                     l1235:
  1545     0458  0875               	movf	___wmul@product+1,w
  1546     0459  00F1               	movwf	?___wmul+1
  1547     045A  0874               	movf	___wmul@product,w
  1548     045B  00F0               	movwf	?___wmul
  1549     045C                     l276:
  1550     045C  0008               	return
  1551     045D                     __end_of___wmul:
  1552                           
  1553                           	psect	text4
  1554     0493                     __ptext4:	
  1555 ;; *************** function ___lwmod *****************
  1556 ;; Defined at:
  1557 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  1558 ;; Parameters:    Size  Location     Type
  1559 ;;  divisor         2    7[COMMON] unsigned int 
  1560 ;;  dividend        2    9[COMMON] unsigned int 
  1561 ;; Auto vars:     Size  Location     Type
  1562 ;;  counter         1   11[COMMON] unsigned char 
  1563 ;; Return value:  Size  Location     Type
  1564 ;;                  2    7[COMMON] unsigned int 
  1565 ;; Registers used:
  1566 ;;		wreg, status,2, status,0, btemp+1
  1567 ;; Tracked objects:
  1568 ;;		On entry : 0/0
  1569 ;;		On exit  : 0/0
  1570 ;;		Unchanged: 0/0
  1571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1572 ;;      Params:         4       0       0       0       0
  1573 ;;      Locals:         1       0       0       0       0
  1574 ;;      Temps:          0       0       0       0       0
  1575 ;;      Totals:         5       0       0       0       0
  1576 ;;Total ram usage:        5 bytes
  1577 ;; Hardware stack levels used: 1
  1578 ;; This function calls:
  1579 ;;		Nothing
  1580 ;; This function is called by:
  1581 ;;		_sprintf
  1582 ;; This function uses a non-reentrant model
  1583 ;;
  1584                           
  1585     0493                     ___lwmod:	
  1586                           ;psect for function ___lwmod
  1587                           
  1588     0493                     l1265:	
  1589                           ;incstack = 0
  1590                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  1591                           
  1592     0493  0877               	movf	___lwmod@divisor,w
  1593     0494  0478               	iorwf	___lwmod@divisor+1,w
  1594     0495  1903               	btfsc	3,2
  1595     0496  2C98               	goto	u621
  1596     0497  2C99               	goto	u620
  1597     0498                     u621:
  1598     0498  2CC8               	goto	l1283
  1599     0499                     u620:
  1600     0499                     l1267:
  1601     0499  01FB               	clrf	___lwmod@counter
  1602     049A  0AFB               	incf	___lwmod@counter,f
  1603     049B  2CA7               	goto	l1273
  1604     049C                     l1269:
  1605     049C  3001               	movlw	1
  1606     049D                     u635:
  1607     049D  1003               	clrc
  1608     049E  0DF7               	rlf	___lwmod@divisor,f
  1609     049F  0DF8               	rlf	___lwmod@divisor+1,f
  1610     04A0  3EFF               	addlw	-1
  1611     04A1  1D03               	skipz
  1612     04A2  2C9D               	goto	u635
  1613     04A3                     l1271:
  1614     04A3  3001               	movlw	1
  1615     04A4  00FF               	movwf	btemp+1
  1616     04A5  087F               	movf	btemp+1,w
  1617     04A6  07FB               	addwf	___lwmod@counter,f
  1618     04A7                     l1273:
  1619     04A7  1FF8               	btfss	___lwmod@divisor+1,7
  1620     04A8  2CAA               	goto	u641
  1621     04A9  2CAB               	goto	u640
  1622     04AA                     u641:
  1623     04AA  2C9C               	goto	l1269
  1624     04AB                     u640:
  1625     04AB                     l1275:
  1626     04AB  0878               	movf	___lwmod@divisor+1,w
  1627     04AC  027A               	subwf	___lwmod@dividend+1,w
  1628     04AD  1D03               	skipz
  1629     04AE  2CB1               	goto	u655
  1630     04AF  0877               	movf	___lwmod@divisor,w
  1631     04B0  0279               	subwf	___lwmod@dividend,w
  1632     04B1                     u655:
  1633     04B1  1C03               	skipc
  1634     04B2  2CB4               	goto	u651
  1635     04B3  2CB5               	goto	u650
  1636     04B4                     u651:
  1637     04B4  2CBB               	goto	l1279
  1638     04B5                     u650:
  1639     04B5                     l1277:
  1640     04B5  0877               	movf	___lwmod@divisor,w
  1641     04B6  02F9               	subwf	___lwmod@dividend,f
  1642     04B7  0878               	movf	___lwmod@divisor+1,w
  1643     04B8  1C03               	skipc
  1644     04B9  03FA               	decf	___lwmod@dividend+1,f
  1645     04BA  02FA               	subwf	___lwmod@dividend+1,f
  1646     04BB                     l1279:
  1647     04BB  3001               	movlw	1
  1648     04BC                     u665:
  1649     04BC  1003               	clrc
  1650     04BD  0CF8               	rrf	___lwmod@divisor+1,f
  1651     04BE  0CF7               	rrf	___lwmod@divisor,f
  1652     04BF  3EFF               	addlw	-1
  1653     04C0  1D03               	skipz
  1654     04C1  2CBC               	goto	u665
  1655     04C2                     l1281:
  1656     04C2  3001               	movlw	1
  1657     04C3  02FB               	subwf	___lwmod@counter,f
  1658     04C4  1D03               	btfss	3,2
  1659     04C5  2CC7               	goto	u671
  1660     04C6  2CC8               	goto	u670
  1661     04C7                     u671:
  1662     04C7  2CAB               	goto	l1275
  1663     04C8                     u670:
  1664     04C8                     l1283:
  1665     04C8  087A               	movf	___lwmod@dividend+1,w
  1666     04C9  00F8               	movwf	?___lwmod+1
  1667     04CA  0879               	movf	___lwmod@dividend,w
  1668     04CB  00F7               	movwf	?___lwmod
  1669     04CC                     l556:
  1670     04CC  0008               	return
  1671     04CD                     __end_of___lwmod:
  1672                           
  1673                           	psect	text5
  1674     050F                     __ptext5:	
  1675 ;; *************** function ___lwdiv *****************
  1676 ;; Defined at:
  1677 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;  divisor         2    0[COMMON] unsigned int 
  1680 ;;  dividend        2    2[COMMON] unsigned int 
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;  quotient        2    4[COMMON] unsigned int 
  1683 ;;  counter         1    6[COMMON] unsigned char 
  1684 ;; Return value:  Size  Location     Type
  1685 ;;                  2    0[COMMON] unsigned int 
  1686 ;; Registers used:
  1687 ;;		wreg, status,2, status,0, btemp+1
  1688 ;; Tracked objects:
  1689 ;;		On entry : 0/0
  1690 ;;		On exit  : 0/0
  1691 ;;		Unchanged: 0/0
  1692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1693 ;;      Params:         4       0       0       0       0
  1694 ;;      Locals:         3       0       0       0       0
  1695 ;;      Temps:          0       0       0       0       0
  1696 ;;      Totals:         7       0       0       0       0
  1697 ;;Total ram usage:        7 bytes
  1698 ;; Hardware stack levels used: 1
  1699 ;; This function calls:
  1700 ;;		Nothing
  1701 ;; This function is called by:
  1702 ;;		_sprintf
  1703 ;; This function uses a non-reentrant model
  1704 ;;
  1705                           
  1706     050F                     ___lwdiv:	
  1707                           ;psect for function ___lwdiv
  1708                           
  1709     050F                     l1239:	
  1710                           ;incstack = 0
  1711                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  1712                           
  1713     050F  01F4               	clrf	___lwdiv@quotient
  1714     0510  01F5               	clrf	___lwdiv@quotient+1
  1715     0511                     l1241:
  1716     0511  0870               	movf	___lwdiv@divisor,w
  1717     0512  0471               	iorwf	___lwdiv@divisor+1,w
  1718     0513  1903               	btfsc	3,2
  1719     0514  2D16               	goto	u551
  1720     0515  2D17               	goto	u550
  1721     0516                     u551:
  1722     0516  2D4E               	goto	l1261
  1723     0517                     u550:
  1724     0517                     l1243:
  1725     0517  01F6               	clrf	___lwdiv@counter
  1726     0518  0AF6               	incf	___lwdiv@counter,f
  1727     0519  2D25               	goto	l1249
  1728     051A                     l1245:
  1729     051A  3001               	movlw	1
  1730     051B                     u565:
  1731     051B  1003               	clrc
  1732     051C  0DF0               	rlf	___lwdiv@divisor,f
  1733     051D  0DF1               	rlf	___lwdiv@divisor+1,f
  1734     051E  3EFF               	addlw	-1
  1735     051F  1D03               	skipz
  1736     0520  2D1B               	goto	u565
  1737     0521                     l1247:
  1738     0521  3001               	movlw	1
  1739     0522  00FF               	movwf	btemp+1
  1740     0523  087F               	movf	btemp+1,w
  1741     0524  07F6               	addwf	___lwdiv@counter,f
  1742     0525                     l1249:
  1743     0525  1FF1               	btfss	___lwdiv@divisor+1,7
  1744     0526  2D28               	goto	u571
  1745     0527  2D29               	goto	u570
  1746     0528                     u571:
  1747     0528  2D1A               	goto	l1245
  1748     0529                     u570:
  1749     0529                     l1251:
  1750     0529  3001               	movlw	1
  1751     052A                     u585:
  1752     052A  1003               	clrc
  1753     052B  0DF4               	rlf	___lwdiv@quotient,f
  1754     052C  0DF5               	rlf	___lwdiv@quotient+1,f
  1755     052D  3EFF               	addlw	-1
  1756     052E  1D03               	skipz
  1757     052F  2D2A               	goto	u585
  1758     0530  0871               	movf	___lwdiv@divisor+1,w
  1759     0531  0273               	subwf	___lwdiv@dividend+1,w
  1760     0532  1D03               	skipz
  1761     0533  2D36               	goto	u595
  1762     0534  0870               	movf	___lwdiv@divisor,w
  1763     0535  0272               	subwf	___lwdiv@dividend,w
  1764     0536                     u595:
  1765     0536  1C03               	skipc
  1766     0537  2D39               	goto	u591
  1767     0538  2D3A               	goto	u590
  1768     0539                     u591:
  1769     0539  2D41               	goto	l1257
  1770     053A                     u590:
  1771     053A                     l1253:
  1772     053A  0870               	movf	___lwdiv@divisor,w
  1773     053B  02F2               	subwf	___lwdiv@dividend,f
  1774     053C  0871               	movf	___lwdiv@divisor+1,w
  1775     053D  1C03               	skipc
  1776     053E  03F3               	decf	___lwdiv@dividend+1,f
  1777     053F  02F3               	subwf	___lwdiv@dividend+1,f
  1778     0540                     l1255:
  1779     0540  1474               	bsf	___lwdiv@quotient,0
  1780     0541                     l1257:
  1781     0541  3001               	movlw	1
  1782     0542                     u605:
  1783     0542  1003               	clrc
  1784     0543  0CF1               	rrf	___lwdiv@divisor+1,f
  1785     0544  0CF0               	rrf	___lwdiv@divisor,f
  1786     0545  3EFF               	addlw	-1
  1787     0546  1D03               	skipz
  1788     0547  2D42               	goto	u605
  1789     0548                     l1259:
  1790     0548  3001               	movlw	1
  1791     0549  02F6               	subwf	___lwdiv@counter,f
  1792     054A  1D03               	btfss	3,2
  1793     054B  2D4D               	goto	u611
  1794     054C  2D4E               	goto	u610
  1795     054D                     u611:
  1796     054D  2D29               	goto	l1251
  1797     054E                     u610:
  1798     054E                     l1261:
  1799     054E  0875               	movf	___lwdiv@quotient+1,w
  1800     054F  00F1               	movwf	?___lwdiv+1
  1801     0550  0874               	movf	___lwdiv@quotient,w
  1802     0551  00F0               	movwf	?___lwdiv
  1803     0552                     l546:
  1804     0552  0008               	return
  1805     0553                     __end_of___lwdiv:
  1806                           
  1807                           	psect	text6
  1808     04CD                     __ptext6:	
  1809 ;; *************** function _LCD_Write_String *****************
  1810 ;; Defined at:
  1811 ;;		line 133 in file "I2C_LCD.c"
  1812 ;; Parameters:    Size  Location     Type
  1813 ;;  Str             2    6[COMMON] PTR unsigned char 
  1814 ;;		 -> main@str(3), STR_2(7), STR_1(8), 
  1815 ;; Auto vars:     Size  Location     Type
  1816 ;;  i               2   11[COMMON] int 
  1817 ;; Return value:  Size  Location     Type
  1818 ;;                  1    wreg      void 
  1819 ;; Registers used:
  1820 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1821 ;; Tracked objects:
  1822 ;;		On entry : 0/0
  1823 ;;		On exit  : 0/0
  1824 ;;		Unchanged: 0/0
  1825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1826 ;;      Params:         2       0       0       0       0
  1827 ;;      Locals:         2       0       0       0       0
  1828 ;;      Temps:          3       0       0       0       0
  1829 ;;      Totals:         7       0       0       0       0
  1830 ;;Total ram usage:        7 bytes
  1831 ;; Hardware stack levels used: 1
  1832 ;; Hardware stack levels required when called: 5
  1833 ;; This function calls:
  1834 ;;		_LCD_Write_Char
  1835 ;; This function is called by:
  1836 ;;		_main
  1837 ;; This function uses a non-reentrant model
  1838 ;;
  1839                           
  1840     04CD                     _LCD_Write_String:	
  1841                           ;psect for function _LCD_Write_String
  1842                           
  1843     04CD                     l1351:	
  1844                           ;incstack = 0
  1845                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1846                           
  1847                           
  1848                           ;I2C_LCD.c: 133: void LCD_Write_String(char* Str);I2C_LCD.c: 134: {;I2C_LCD.c: 135:   fo
      +                          r(int i=0; Str[i]!='\0'; i++)
  1849     04CD  01FB               	clrf	LCD_Write_String@i
  1850     04CE  01FC               	clrf	LCD_Write_String@i+1
  1851     04CF  2CF2               	goto	l1357
  1852     04D0                     l1353:
  1853                           
  1854                           ;I2C_LCD.c: 136:     LCD_Write_Char(Str[i]);
  1855     04D0  087B               	movf	LCD_Write_String@i,w
  1856     04D1  0776               	addwf	LCD_Write_String@Str,w
  1857     04D2  00F9               	movwf	??_LCD_Write_String+1
  1858     04D3  0877               	movf	LCD_Write_String@Str+1,w
  1859     04D4  00F8               	movwf	??_LCD_Write_String
  1860     04D5  1803               	skipnc
  1861     04D6  0AF8               	incf	??_LCD_Write_String,f
  1862     04D7  1FFB               	btfss	LCD_Write_String@i,7
  1863     04D8  2CDA               	goto	u680
  1864     04D9  03F8               	decf	??_LCD_Write_String,f
  1865     04DA                     u680:
  1866     04DA  0878               	movf	??_LCD_Write_String,w
  1867     04DB  00FA               	movwf	??_LCD_Write_String+2
  1868     04DC  087A               	movf	??_LCD_Write_String+2,w
  1869     04DD  1283               	bcf	3,5	;RP0=0, select bank0
  1870     04DE  1303               	bcf	3,6	;RP1=0, select bank0
  1871     04DF  00FF               	movwf	btemp+1
  1872     04E0  0879               	movf	??_LCD_Write_String+1,w
  1873     04E1  0084               	movwf	4
  1874     04E2  120A  118A  2003  120A  118A  	fcall	stringtab
  1875     04E7  120A  118A  2400  120A  118A  	fcall	_LCD_Write_Char
  1876     04EC                     l1355:
  1877     04EC  3001               	movlw	1
  1878     04ED  07FB               	addwf	LCD_Write_String@i,f
  1879     04EE  1803               	skipnc
  1880     04EF  0AFC               	incf	LCD_Write_String@i+1,f
  1881     04F0  3000               	movlw	0
  1882     04F1  07FC               	addwf	LCD_Write_String@i+1,f
  1883     04F2                     l1357:
  1884     04F2  087B               	movf	LCD_Write_String@i,w
  1885     04F3  0776               	addwf	LCD_Write_String@Str,w
  1886     04F4  00F9               	movwf	??_LCD_Write_String+1
  1887     04F5  0877               	movf	LCD_Write_String@Str+1,w
  1888     04F6  00F8               	movwf	??_LCD_Write_String
  1889     04F7  1803               	skipnc
  1890     04F8  0AF8               	incf	??_LCD_Write_String,f
  1891     04F9  1FFB               	btfss	LCD_Write_String@i,7
  1892     04FA  2CFC               	goto	u690
  1893     04FB  03F8               	decf	??_LCD_Write_String,f
  1894     04FC                     u690:
  1895     04FC  0878               	movf	??_LCD_Write_String,w
  1896     04FD  00FA               	movwf	??_LCD_Write_String+2
  1897     04FE  087A               	movf	??_LCD_Write_String+2,w
  1898     04FF  1283               	bcf	3,5	;RP0=0, select bank0
  1899     0500  1303               	bcf	3,6	;RP1=0, select bank0
  1900     0501  00FF               	movwf	btemp+1
  1901     0502  0879               	movf	??_LCD_Write_String+1,w
  1902     0503  0084               	movwf	4
  1903     0504  120A  118A  2003  120A  118A  	fcall	stringtab
  1904     0509  3A00               	xorlw	0
  1905     050A  1D03               	skipz
  1906     050B  2D0D               	goto	u701
  1907     050C  2D0E               	goto	u700
  1908     050D                     u701:
  1909     050D  2CD0               	goto	l1353
  1910     050E                     u700:
  1911     050E                     l125:
  1912     050E  0008               	return
  1913     050F                     __end_of_LCD_Write_String:
  1914                           
  1915                           	psect	text7
  1916     0400                     __ptext7:	
  1917 ;; *************** function _LCD_Write_Char *****************
  1918 ;; Defined at:
  1919 ;;		line 126 in file "I2C_LCD.c"
  1920 ;; Parameters:    Size  Location     Type
  1921 ;;  Data            1    wreg     unsigned char 
  1922 ;; Auto vars:     Size  Location     Type
  1923 ;;  Data            1    5[COMMON] unsigned char 
  1924 ;; Return value:  Size  Location     Type
  1925 ;;                  1    wreg      void 
  1926 ;; Registers used:
  1927 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1928 ;; Tracked objects:
  1929 ;;		On entry : 0/0
  1930 ;;		On exit  : 0/0
  1931 ;;		Unchanged: 0/0
  1932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1933 ;;      Params:         0       0       0       0       0
  1934 ;;      Locals:         1       0       0       0       0
  1935 ;;      Temps:          1       0       0       0       0
  1936 ;;      Totals:         2       0       0       0       0
  1937 ;;Total ram usage:        2 bytes
  1938 ;; Hardware stack levels used: 1
  1939 ;; Hardware stack levels required when called: 4
  1940 ;; This function calls:
  1941 ;;		_LCD_Write_4Bit
  1942 ;; This function is called by:
  1943 ;;		_LCD_Write_String
  1944 ;; This function uses a non-reentrant model
  1945 ;;
  1946                           
  1947     0400                     _LCD_Write_Char:	
  1948                           ;psect for function _LCD_Write_Char
  1949                           
  1950                           
  1951                           ;incstack = 0
  1952                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1953                           ;LCD_Write_Char@Data stored from wreg
  1954     0400  00F5               	movwf	LCD_Write_Char@Data
  1955     0401                     l1209:
  1956                           
  1957                           ;I2C_LCD.c: 126: void LCD_Write_Char(char Data);I2C_LCD.c: 127: {;I2C_LCD.c: 128:   RS =
      +                           1;
  1958     0401  01FD               	clrf	_RS
  1959     0402  0AFD               	incf	_RS,f
  1960     0403                     l1211:
  1961                           
  1962                           ;I2C_LCD.c: 129:   LCD_Write_4Bit(Data & 0xF0);
  1963     0403  0875               	movf	LCD_Write_Char@Data,w
  1964     0404  39F0               	andlw	240
  1965     0405  120A  118A  23CD  120A  118A  	fcall	_LCD_Write_4Bit
  1966                           
  1967                           ;I2C_LCD.c: 130:   LCD_Write_4Bit((Data << 4) & 0xF0);
  1968     040A  0875               	movf	LCD_Write_Char@Data,w
  1969     040B  00F4               	movwf	??_LCD_Write_Char
  1970     040C  3003               	movlw	3
  1971     040D                     u485:
  1972     040D  1003               	clrc
  1973     040E  0DF4               	rlf	??_LCD_Write_Char,f
  1974     040F  3EFF               	addlw	-1
  1975     0410  1D03               	skipz
  1976     0411  2C0D               	goto	u485
  1977     0412  1003               	clrc
  1978     0413  0D74               	rlf	??_LCD_Write_Char,w
  1979     0414  39F0               	andlw	240
  1980     0415  120A  118A  23CD  120A  118A  	fcall	_LCD_Write_4Bit
  1981     041A                     l119:
  1982     041A  0008               	return
  1983     041B                     __end_of_LCD_Write_Char:
  1984                           
  1985                           	psect	text8
  1986     045D                     __ptext8:	
  1987 ;; *************** function _LCD_Set_Cursor *****************
  1988 ;; Defined at:
  1989 ;;		line 139 in file "I2C_LCD.c"
  1990 ;; Parameters:    Size  Location     Type
  1991 ;;  ROW             1    wreg     unsigned char 
  1992 ;;  COL             1    6[COMMON] unsigned char 
  1993 ;; Auto vars:     Size  Location     Type
  1994 ;;  ROW             1    9[COMMON] unsigned char 
  1995 ;; Return value:  Size  Location     Type
  1996 ;;                  1    wreg      void 
  1997 ;; Registers used:
  1998 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1999 ;; Tracked objects:
  2000 ;;		On entry : 0/0
  2001 ;;		On exit  : 0/0
  2002 ;;		Unchanged: 0/0
  2003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2004 ;;      Params:         1       0       0       0       0
  2005 ;;      Locals:         1       0       0       0       0
  2006 ;;      Temps:          2       0       0       0       0
  2007 ;;      Totals:         4       0       0       0       0
  2008 ;;Total ram usage:        4 bytes
  2009 ;; Hardware stack levels used: 1
  2010 ;; Hardware stack levels required when called: 5
  2011 ;; This function calls:
  2012 ;;		_LCD_CMD
  2013 ;; This function is called by:
  2014 ;;		_main
  2015 ;; This function uses a non-reentrant model
  2016 ;;
  2017                           
  2018     045D                     _LCD_Set_Cursor:	
  2019                           ;psect for function _LCD_Set_Cursor
  2020                           
  2021                           
  2022                           ;incstack = 0
  2023                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2024                           ;LCD_Set_Cursor@ROW stored from wreg
  2025     045D  00F9               	movwf	LCD_Set_Cursor@ROW
  2026     045E                     l1335:
  2027                           
  2028                           ;I2C_LCD.c: 139: void LCD_Set_Cursor(unsigned char ROW, unsigned char COL);I2C_LCD.c: 14
      +                          0: {;I2C_LCD.c: 141:   switch(ROW)
  2029     045E  2C7F               	goto	l1345
  2030     045F                     l1337:
  2031                           
  2032                           ;I2C_LCD.c: 144:       LCD_CMD(0xC0 + COL-1);
  2033     045F  0876               	movf	LCD_Set_Cursor@COL,w
  2034     0460  3EBF               	addlw	191
  2035     0461  120A  118A  23E6  120A  118A  	fcall	_LCD_CMD
  2036                           
  2037                           ;I2C_LCD.c: 145:       break;
  2038     0466  2C92               	goto	l134
  2039     0467                     l1339:
  2040                           
  2041                           ;I2C_LCD.c: 147:       LCD_CMD(0x94 + COL-1);
  2042     0467  0876               	movf	LCD_Set_Cursor@COL,w
  2043     0468  3E93               	addlw	147
  2044     0469  120A  118A  23E6  120A  118A  	fcall	_LCD_CMD
  2045                           
  2046                           ;I2C_LCD.c: 148:       break;
  2047     046E  2C92               	goto	l134
  2048     046F                     l1341:
  2049                           
  2050                           ;I2C_LCD.c: 150:       LCD_CMD(0xD4 + COL-1);
  2051     046F  0876               	movf	LCD_Set_Cursor@COL,w
  2052     0470  3ED3               	addlw	211
  2053     0471  120A  118A  23E6  120A  118A  	fcall	_LCD_CMD
  2054                           
  2055                           ;I2C_LCD.c: 151:       break;
  2056     0476  2C92               	goto	l134
  2057     0477                     l1343:
  2058                           
  2059                           ;I2C_LCD.c: 154:       LCD_CMD(0x80 + COL-1);
  2060     0477  0876               	movf	LCD_Set_Cursor@COL,w
  2061     0478  3E7F               	addlw	127
  2062     0479  120A  118A  23E6  120A  118A  	fcall	_LCD_CMD
  2063                           
  2064                           ;I2C_LCD.c: 155:   }
  2065     047E  2C92               	goto	l134
  2066     047F                     l1345:
  2067     047F  0879               	movf	LCD_Set_Cursor@ROW,w
  2068     0480  00F7               	movwf	??_LCD_Set_Cursor
  2069     0481  01F8               	clrf	??_LCD_Set_Cursor+1
  2070                           
  2071                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2072                           ; Switch size 1, requested type "simple"
  2073                           ; Number of cases is 1, Range of values is 0 to 0
  2074                           ; switch strategies available:
  2075                           ; Name         Instructions Cycles
  2076                           ; simple_byte            4     3 (average)
  2077                           ; direct_byte           11     8 (fixed)
  2078                           ; jumptable            260     6 (fixed)
  2079                           ;	Chosen strategy is simple_byte
  2080     0482  0878               	movf	??_LCD_Set_Cursor+1,w
  2081     0483  3A00               	xorlw	0	; case 0
  2082     0484  1903               	skipnz
  2083     0485  2C87               	goto	l1575
  2084     0486  2C77               	goto	l1343
  2085     0487                     l1575:
  2086                           
  2087                           ; Switch size 1, requested type "simple"
  2088                           ; Number of cases is 3, Range of values is 2 to 4
  2089                           ; switch strategies available:
  2090                           ; Name         Instructions Cycles
  2091                           ; simple_byte           10     6 (average)
  2092                           ; direct_byte           20    11 (fixed)
  2093                           ; jumptable            263     9 (fixed)
  2094                           ;	Chosen strategy is simple_byte
  2095     0487  0877               	movf	??_LCD_Set_Cursor,w
  2096     0488  3A02               	xorlw	2	; case 2
  2097     0489  1903               	skipnz
  2098     048A  2C5F               	goto	l1337
  2099     048B  3A01               	xorlw	1	; case 3
  2100     048C  1903               	skipnz
  2101     048D  2C67               	goto	l1339
  2102     048E  3A07               	xorlw	7	; case 4
  2103     048F  1903               	skipnz
  2104     0490  2C6F               	goto	l1341
  2105     0491  2C77               	goto	l1343
  2106     0492                     l134:
  2107     0492  0008               	return
  2108     0493                     __end_of_LCD_Set_Cursor:
  2109                           
  2110                           	psect	text9
  2111     05E3                     __ptext9:	
  2112 ;; *************** function _LCD_Init *****************
  2113 ;; Defined at:
  2114 ;;		line 79 in file "I2C_LCD.c"
  2115 ;; Parameters:    Size  Location     Type
  2116 ;;  I2C_Add         1    wreg     unsigned char 
  2117 ;; Auto vars:     Size  Location     Type
  2118 ;;  I2C_Add         1    9[COMMON] unsigned char 
  2119 ;; Return value:  Size  Location     Type
  2120 ;;                  1    wreg      void 
  2121 ;; Registers used:
  2122 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2123 ;; Tracked objects:
  2124 ;;		On entry : 0/0
  2125 ;;		On exit  : 0/0
  2126 ;;		Unchanged: 0/0
  2127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2128 ;;      Params:         0       0       0       0       0
  2129 ;;      Locals:         1       0       0       0       0
  2130 ;;      Temps:          3       0       0       0       0
  2131 ;;      Totals:         4       0       0       0       0
  2132 ;;Total ram usage:        4 bytes
  2133 ;; Hardware stack levels used: 1
  2134 ;; Hardware stack levels required when called: 5
  2135 ;; This function calls:
  2136 ;;		_IO_Expander_Write
  2137 ;;		_LCD_CMD
  2138 ;; This function is called by:
  2139 ;;		_main
  2140 ;; This function uses a non-reentrant model
  2141 ;;
  2142                           
  2143     05E3                     _LCD_Init:	
  2144                           ;psect for function _LCD_Init
  2145                           
  2146                           
  2147                           ;incstack = 0
  2148                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2149                           ;LCD_Init@I2C_Add stored from wreg
  2150     05E3  00F9               	movwf	LCD_Init@I2C_Add
  2151     05E4                     l1297:
  2152                           
  2153                           ;I2C_LCD.c: 79: void LCD_Init(unsigned char I2C_Add);I2C_LCD.c: 80: {;I2C_LCD.c: 81:   i
      +                          2c_add = I2C_Add;
  2154     05E4  0879               	movf	LCD_Init@I2C_Add,w
  2155     05E5  1283               	bcf	3,5	;RP0=0, select bank0
  2156     05E6  1303               	bcf	3,6	;RP1=0, select bank0
  2157     05E7  00B7               	movwf	_i2c_add
  2158     05E8                     l1299:
  2159                           
  2160                           ;I2C_LCD.c: 82:   IO_Expander_Write(0x00);
  2161     05E8  3000               	movlw	0
  2162     05E9  120A  118A  241B  120A  118A  	fcall	_IO_Expander_Write
  2163     05EE                     l1301:
  2164                           
  2165                           ;I2C_LCD.c: 83:   _delay((unsigned long)((30)*(16000000/4000.0)));
  2166     05EE  309C               	movlw	156
  2167     05EF  00F7               	movwf	??_LCD_Init+1
  2168     05F0  30D7               	movlw	215
  2169     05F1  00F6               	movwf	??_LCD_Init
  2170     05F2                     u897:
  2171     05F2  0BF6               	decfsz	??_LCD_Init,f
  2172     05F3  2DF2               	goto	u897
  2173     05F4  0BF7               	decfsz	??_LCD_Init+1,f
  2174     05F5  2DF2               	goto	u897
  2175     05F6                     l1303:
  2176                           
  2177                           ;I2C_LCD.c: 84:   LCD_CMD(0x03);
  2178     05F6  3003               	movlw	3
  2179     05F7  120A  118A  23E6  120A  118A  	fcall	_LCD_CMD
  2180     05FC                     l1305:
  2181                           
  2182                           ;I2C_LCD.c: 85:   _delay((unsigned long)((5)*(16000000/4000.0)));
  2183     05FC  301A               	movlw	26
  2184     05FD  00F7               	movwf	??_LCD_Init+1
  2185     05FE  30F8               	movlw	248
  2186     05FF  00F6               	movwf	??_LCD_Init
  2187     0600                     u907:
  2188     0600  0BF6               	decfsz	??_LCD_Init,f
  2189     0601  2E00               	goto	u907
  2190     0602  0BF7               	decfsz	??_LCD_Init+1,f
  2191     0603  2E00               	goto	u907
  2192     0604  0000               	nop
  2193     0605                     l1307:
  2194                           
  2195                           ;I2C_LCD.c: 86:   LCD_CMD(0x03);
  2196     0605  3003               	movlw	3
  2197     0606  120A  118A  23E6  120A  118A  	fcall	_LCD_CMD
  2198     060B                     l1309:
  2199                           
  2200                           ;I2C_LCD.c: 87:   _delay((unsigned long)((5)*(16000000/4000.0)));
  2201     060B  301A               	movlw	26
  2202     060C  00F7               	movwf	??_LCD_Init+1
  2203     060D  30F8               	movlw	248
  2204     060E  00F6               	movwf	??_LCD_Init
  2205     060F                     u917:
  2206     060F  0BF6               	decfsz	??_LCD_Init,f
  2207     0610  2E0F               	goto	u917
  2208     0611  0BF7               	decfsz	??_LCD_Init+1,f
  2209     0612  2E0F               	goto	u917
  2210     0613  0000               	nop
  2211     0614                     l1311:
  2212                           
  2213                           ;I2C_LCD.c: 88:   LCD_CMD(0x03);
  2214     0614  3003               	movlw	3
  2215     0615  120A  118A  23E6  120A  118A  	fcall	_LCD_CMD
  2216     061A                     l1313:
  2217                           
  2218                           ;I2C_LCD.c: 89:   _delay((unsigned long)((5)*(16000000/4000.0)));
  2219     061A  301A               	movlw	26
  2220     061B  00F7               	movwf	??_LCD_Init+1
  2221     061C  30F8               	movlw	248
  2222     061D  00F6               	movwf	??_LCD_Init
  2223     061E                     u927:
  2224     061E  0BF6               	decfsz	??_LCD_Init,f
  2225     061F  2E1E               	goto	u927
  2226     0620  0BF7               	decfsz	??_LCD_Init+1,f
  2227     0621  2E1E               	goto	u927
  2228     0622  0000               	nop
  2229     0623                     l1315:
  2230                           
  2231                           ;I2C_LCD.c: 90:   LCD_CMD(0x02);
  2232     0623  3002               	movlw	2
  2233     0624  120A  118A  23E6  120A  118A  	fcall	_LCD_CMD
  2234     0629                     l1317:
  2235                           
  2236                           ;I2C_LCD.c: 91:   _delay((unsigned long)((5)*(16000000/4000.0)));
  2237     0629  301A               	movlw	26
  2238     062A  00F7               	movwf	??_LCD_Init+1
  2239     062B  30F8               	movlw	248
  2240     062C  00F6               	movwf	??_LCD_Init
  2241     062D                     u937:
  2242     062D  0BF6               	decfsz	??_LCD_Init,f
  2243     062E  2E2D               	goto	u937
  2244     062F  0BF7               	decfsz	??_LCD_Init+1,f
  2245     0630  2E2D               	goto	u937
  2246     0631  0000               	nop
  2247     0632                     l1319:
  2248                           
  2249                           ;I2C_LCD.c: 92:   LCD_CMD(0x20 | (2 << 2));
  2250     0632  3028               	movlw	40
  2251     0633  120A  118A  23E6  120A  118A  	fcall	_LCD_CMD
  2252     0638                     l1321:
  2253                           
  2254                           ;I2C_LCD.c: 93:   _delay((unsigned long)((50)*(16000000/4000.0)));
  2255     0638  3002               	movlw	2
  2256     0639  00F8               	movwf	??_LCD_Init+2
  2257     063A  3004               	movlw	4
  2258     063B  00F7               	movwf	??_LCD_Init+1
  2259     063C  30BA               	movlw	186
  2260     063D  00F6               	movwf	??_LCD_Init
  2261     063E                     u947:
  2262     063E  0BF6               	decfsz	??_LCD_Init,f
  2263     063F  2E3E               	goto	u947
  2264     0640  0BF7               	decfsz	??_LCD_Init+1,f
  2265     0641  2E3E               	goto	u947
  2266     0642  0BF8               	decfsz	??_LCD_Init+2,f
  2267     0643  2E3E               	goto	u947
  2268     0644  0000               	nop
  2269     0645                     l1323:
  2270                           
  2271                           ;I2C_LCD.c: 94:   LCD_CMD(0x0C);
  2272     0645  300C               	movlw	12
  2273     0646  120A  118A  23E6  120A  118A  	fcall	_LCD_CMD
  2274     064B                     l1325:
  2275                           
  2276                           ;I2C_LCD.c: 95:   _delay((unsigned long)((50)*(16000000/4000.0)));
  2277     064B  3002               	movlw	2
  2278     064C  00F8               	movwf	??_LCD_Init+2
  2279     064D  3004               	movlw	4
  2280     064E  00F7               	movwf	??_LCD_Init+1
  2281     064F  30BA               	movlw	186
  2282     0650  00F6               	movwf	??_LCD_Init
  2283     0651                     u957:
  2284     0651  0BF6               	decfsz	??_LCD_Init,f
  2285     0652  2E51               	goto	u957
  2286     0653  0BF7               	decfsz	??_LCD_Init+1,f
  2287     0654  2E51               	goto	u957
  2288     0655  0BF8               	decfsz	??_LCD_Init+2,f
  2289     0656  2E51               	goto	u957
  2290     0657  0000               	nop
  2291     0658                     l1327:
  2292                           
  2293                           ;I2C_LCD.c: 96:   LCD_CMD(0x01);
  2294     0658  3001               	movlw	1
  2295     0659  120A  118A  23E6  120A  118A  	fcall	_LCD_CMD
  2296     065E                     l1329:
  2297                           
  2298                           ;I2C_LCD.c: 97:   _delay((unsigned long)((50)*(16000000/4000.0)));
  2299     065E  3002               	movlw	2
  2300     065F  00F8               	movwf	??_LCD_Init+2
  2301     0660  3004               	movlw	4
  2302     0661  00F7               	movwf	??_LCD_Init+1
  2303     0662  30BA               	movlw	186
  2304     0663  00F6               	movwf	??_LCD_Init
  2305     0664                     u967:
  2306     0664  0BF6               	decfsz	??_LCD_Init,f
  2307     0665  2E64               	goto	u967
  2308     0666  0BF7               	decfsz	??_LCD_Init+1,f
  2309     0667  2E64               	goto	u967
  2310     0668  0BF8               	decfsz	??_LCD_Init+2,f
  2311     0669  2E64               	goto	u967
  2312     066A  0000               	nop
  2313     066B                     l1331:
  2314                           
  2315                           ;I2C_LCD.c: 98:   LCD_CMD(0x04 | 0x02);
  2316     066B  3006               	movlw	6
  2317     066C  120A  118A  23E6  120A  118A  	fcall	_LCD_CMD
  2318     0671                     l1333:
  2319                           
  2320                           ;I2C_LCD.c: 99:   _delay((unsigned long)((50)*(16000000/4000.0)));
  2321     0671  3002               	movlw	2
  2322     0672  00F8               	movwf	??_LCD_Init+2
  2323     0673  3004               	movlw	4
  2324     0674  00F7               	movwf	??_LCD_Init+1
  2325     0675  30BA               	movlw	186
  2326     0676  00F6               	movwf	??_LCD_Init
  2327     0677                     u977:
  2328     0677  0BF6               	decfsz	??_LCD_Init,f
  2329     0678  2E77               	goto	u977
  2330     0679  0BF7               	decfsz	??_LCD_Init+1,f
  2331     067A  2E77               	goto	u977
  2332     067B  0BF8               	decfsz	??_LCD_Init+2,f
  2333     067C  2E77               	goto	u977
  2334     067D  0000               	nop
  2335     067E                     l107:
  2336     067E  0008               	return
  2337     067F                     __end_of_LCD_Init:
  2338                           
  2339                           	psect	text10
  2340     03E6                     __ptext10:	
  2341 ;; *************** function _LCD_CMD *****************
  2342 ;; Defined at:
  2343 ;;		line 119 in file "I2C_LCD.c"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;  CMD             1    wreg     unsigned char 
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;  CMD             1    5[COMMON] unsigned char 
  2348 ;; Return value:  Size  Location     Type
  2349 ;;                  1    wreg      void 
  2350 ;; Registers used:
  2351 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2357 ;;      Params:         0       0       0       0       0
  2358 ;;      Locals:         1       0       0       0       0
  2359 ;;      Temps:          1       0       0       0       0
  2360 ;;      Totals:         2       0       0       0       0
  2361 ;;Total ram usage:        2 bytes
  2362 ;; Hardware stack levels used: 1
  2363 ;; Hardware stack levels required when called: 4
  2364 ;; This function calls:
  2365 ;;		_LCD_Write_4Bit
  2366 ;; This function is called by:
  2367 ;;		_LCD_Init
  2368 ;;		_LCD_Set_Cursor
  2369 ;;		_LCD_SL
  2370 ;;		_LCD_SR
  2371 ;;		_LCD_Clear
  2372 ;; This function uses a non-reentrant model
  2373 ;;
  2374                           
  2375     03E6                     _LCD_CMD:	
  2376                           ;psect for function _LCD_CMD
  2377                           
  2378                           
  2379                           ;incstack = 0
  2380                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2381                           ;LCD_CMD@CMD stored from wreg
  2382     03E6  00F5               	movwf	LCD_CMD@CMD
  2383     03E7                     l1203:
  2384                           
  2385                           ;I2C_LCD.c: 119: void LCD_CMD(unsigned char CMD);I2C_LCD.c: 120: {;I2C_LCD.c: 121:   RS 
      +                          = 0;
  2386     03E7  01FD               	clrf	_RS
  2387     03E8                     l1205:
  2388                           
  2389                           ;I2C_LCD.c: 122:   LCD_Write_4Bit(CMD & 0xF0);
  2390     03E8  0875               	movf	LCD_CMD@CMD,w
  2391     03E9  39F0               	andlw	240
  2392     03EA  120A  118A  23CD  120A  118A  	fcall	_LCD_Write_4Bit
  2393     03EF                     l1207:
  2394                           
  2395                           ;I2C_LCD.c: 123:   LCD_Write_4Bit((CMD << 4) & 0xF0);
  2396     03EF  0875               	movf	LCD_CMD@CMD,w
  2397     03F0  00F4               	movwf	??_LCD_CMD
  2398     03F1  3003               	movlw	3
  2399     03F2                     u475:
  2400     03F2  1003               	clrc
  2401     03F3  0DF4               	rlf	??_LCD_CMD,f
  2402     03F4  3EFF               	addlw	-1
  2403     03F5  1D03               	skipz
  2404     03F6  2BF2               	goto	u475
  2405     03F7  1003               	clrc
  2406     03F8  0D74               	rlf	??_LCD_CMD,w
  2407     03F9  39F0               	andlw	240
  2408     03FA  120A  118A  23CD  120A  118A  	fcall	_LCD_Write_4Bit
  2409     03FF                     l116:
  2410     03FF  0008               	return
  2411     0400                     __end_of_LCD_CMD:
  2412                           
  2413                           	psect	text11
  2414     03CD                     __ptext11:	
  2415 ;; *************** function _LCD_Write_4Bit *****************
  2416 ;; Defined at:
  2417 ;;		line 110 in file "I2C_LCD.c"
  2418 ;; Parameters:    Size  Location     Type
  2419 ;;  Nibble          1    wreg     unsigned char 
  2420 ;; Auto vars:     Size  Location     Type
  2421 ;;  Nibble          1    3[COMMON] unsigned char 
  2422 ;; Return value:  Size  Location     Type
  2423 ;;                  1    wreg      void 
  2424 ;; Registers used:
  2425 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2426 ;; Tracked objects:
  2427 ;;		On entry : 0/0
  2428 ;;		On exit  : 0/0
  2429 ;;		Unchanged: 0/0
  2430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2431 ;;      Params:         0       0       0       0       0
  2432 ;;      Locals:         1       0       0       0       0
  2433 ;;      Temps:          1       0       0       0       0
  2434 ;;      Totals:         2       0       0       0       0
  2435 ;;Total ram usage:        2 bytes
  2436 ;; Hardware stack levels used: 1
  2437 ;; Hardware stack levels required when called: 3
  2438 ;; This function calls:
  2439 ;;		_IO_Expander_Write
  2440 ;; This function is called by:
  2441 ;;		_LCD_CMD
  2442 ;;		_LCD_Write_Char
  2443 ;; This function uses a non-reentrant model
  2444 ;;
  2445                           
  2446     03CD                     _LCD_Write_4Bit:	
  2447                           ;psect for function _LCD_Write_4Bit
  2448                           
  2449                           
  2450                           ;incstack = 0
  2451                           ; Regs used in _LCD_Write_4Bit: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2452                           ;LCD_Write_4Bit@Nibble stored from wreg
  2453     03CD  00F3               	movwf	LCD_Write_4Bit@Nibble
  2454     03CE                     l1197:
  2455                           
  2456                           ;I2C_LCD.c: 110: void LCD_Write_4Bit(unsigned char Nibble);I2C_LCD.c: 111: {;I2C_LCD.c: 
      +                          113:   Nibble |= RS;
  2457     03CE  087D               	movf	_RS,w
  2458     03CF  00FF               	movwf	btemp+1
  2459     03D0  087F               	movf	btemp+1,w
  2460     03D1  04F3               	iorwf	LCD_Write_4Bit@Nibble,f
  2461     03D2                     l1199:
  2462                           
  2463                           ;I2C_LCD.c: 114:   IO_Expander_Write(Nibble | 0x04);
  2464     03D2  0873               	movf	LCD_Write_4Bit@Nibble,w
  2465     03D3  3804               	iorlw	4
  2466     03D4  120A  118A  241B  120A  118A  	fcall	_IO_Expander_Write
  2467     03D9                     l1201:
  2468                           
  2469                           ;I2C_LCD.c: 115:   IO_Expander_Write(Nibble & 0xFB);
  2470     03D9  0873               	movf	LCD_Write_4Bit@Nibble,w
  2471     03DA  39FB               	andlw	251
  2472     03DB  120A  118A  241B  120A  118A  	fcall	_IO_Expander_Write
  2473                           
  2474                           ;I2C_LCD.c: 116:   _delay((unsigned long)((50)*(16000000/4000000.0)));
  2475     03E0  3042               	movlw	66
  2476     03E1  00F2               	movwf	??_LCD_Write_4Bit
  2477     03E2                     u987:
  2478     03E2  0BF2               	decfsz	??_LCD_Write_4Bit,f
  2479     03E3  2BE2               	goto	u987
  2480     03E4  0000               	nop
  2481     03E5                     l113:
  2482     03E5  0008               	return
  2483     03E6                     __end_of_LCD_Write_4Bit:
  2484                           
  2485                           	psect	text12
  2486     041B                     __ptext12:	
  2487 ;; *************** function _IO_Expander_Write *****************
  2488 ;; Defined at:
  2489 ;;		line 102 in file "I2C_LCD.c"
  2490 ;; Parameters:    Size  Location     Type
  2491 ;;  Data            1    wreg     unsigned char 
  2492 ;; Auto vars:     Size  Location     Type
  2493 ;;  Data            1    1[COMMON] unsigned char 
  2494 ;; Return value:  Size  Location     Type
  2495 ;;                  1    wreg      void 
  2496 ;; Registers used:
  2497 ;;		wreg, status,2, status,0, pclath, cstack
  2498 ;; Tracked objects:
  2499 ;;		On entry : 0/0
  2500 ;;		On exit  : 0/0
  2501 ;;		Unchanged: 0/0
  2502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2503 ;;      Params:         0       0       0       0       0
  2504 ;;      Locals:         1       0       0       0       0
  2505 ;;      Temps:          0       0       0       0       0
  2506 ;;      Totals:         1       0       0       0       0
  2507 ;;Total ram usage:        1 bytes
  2508 ;; Hardware stack levels used: 1
  2509 ;; Hardware stack levels required when called: 2
  2510 ;; This function calls:
  2511 ;;		_I2C_Master_Start
  2512 ;;		_I2C_Master_Stop
  2513 ;;		_I2C_Master_Write
  2514 ;; This function is called by:
  2515 ;;		_LCD_Init
  2516 ;;		_LCD_Write_4Bit
  2517 ;;		_Backlight
  2518 ;;		_noBacklight
  2519 ;; This function uses a non-reentrant model
  2520 ;;
  2521                           
  2522     041B                     _IO_Expander_Write:	
  2523                           ;psect for function _IO_Expander_Write
  2524                           
  2525                           
  2526                           ;incstack = 0
  2527                           ; Regs used in _IO_Expander_Write: [wreg+status,2+status,0+pclath+cstack]
  2528                           ;IO_Expander_Write@Data stored from wreg
  2529     041B  00F1               	movwf	IO_Expander_Write@Data
  2530     041C                     l1195:
  2531                           
  2532                           ;I2C_LCD.c: 102: void IO_Expander_Write(unsigned char Data);I2C_LCD.c: 103: {;I2C_LCD.c:
      +                           104:   I2C_Master_Start();
  2533     041C  120A  118A  237F  120A  118A  	fcall	_I2C_Master_Start
  2534                           
  2535                           ;I2C_LCD.c: 105:   I2C_Master_Write(i2c_add);
  2536     0421  1283               	bcf	3,5	;RP0=0, select bank0
  2537     0422  1303               	bcf	3,6	;RP1=0, select bank0
  2538     0423  0837               	movf	_i2c_add,w
  2539     0424  120A  118A  23AB  120A  118A  	fcall	_I2C_Master_Write
  2540                           
  2541                           ;I2C_LCD.c: 106:   I2C_Master_Write(Data | BackLight_State);
  2542     0429  0871               	movf	IO_Expander_Write@Data,w
  2543     042A  1283               	bcf	3,5	;RP0=0, select bank0
  2544     042B  1303               	bcf	3,6	;RP1=0, select bank0
  2545     042C  0438               	iorwf	_BackLight_State,w
  2546     042D  120A  118A  23AB  120A  118A  	fcall	_I2C_Master_Write
  2547                           
  2548                           ;I2C_LCD.c: 107:   I2C_Master_Stop();
  2549     0432  120A  118A  2388  120A  118A  	fcall	_I2C_Master_Stop
  2550     0437                     l110:
  2551     0437  0008               	return
  2552     0438                     __end_of_IO_Expander_Write:
  2553                           
  2554                           	psect	text13
  2555     03AB                     __ptext13:	
  2556 ;; *************** function _I2C_Master_Write *****************
  2557 ;; Defined at:
  2558 ;;		line 55 in file "I2C_LCD.c"
  2559 ;; Parameters:    Size  Location     Type
  2560 ;;  data            1    wreg     unsigned char 
  2561 ;; Auto vars:     Size  Location     Type
  2562 ;;  data            1    0[COMMON] unsigned char 
  2563 ;; Return value:  Size  Location     Type
  2564 ;;                  1    wreg      unsigned char 
  2565 ;; Registers used:
  2566 ;;		wreg, status,2, status,0, pclath, cstack
  2567 ;; Tracked objects:
  2568 ;;		On entry : 0/0
  2569 ;;		On exit  : 0/0
  2570 ;;		Unchanged: 0/0
  2571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2572 ;;      Params:         0       0       0       0       0
  2573 ;;      Locals:         1       0       0       0       0
  2574 ;;      Temps:          0       0       0       0       0
  2575 ;;      Totals:         1       0       0       0       0
  2576 ;;Total ram usage:        1 bytes
  2577 ;; Hardware stack levels used: 1
  2578 ;; Hardware stack levels required when called: 1
  2579 ;; This function calls:
  2580 ;;		_I2C_Master_Wait
  2581 ;; This function is called by:
  2582 ;;		_IO_Expander_Write
  2583 ;; This function uses a non-reentrant model
  2584 ;;
  2585                           
  2586     03AB                     _I2C_Master_Write:	
  2587                           ;psect for function _I2C_Master_Write
  2588                           
  2589                           
  2590                           ;incstack = 0
  2591                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2592                           ;I2C_Master_Write@data stored from wreg
  2593     03AB  00F0               	movwf	I2C_Master_Write@data
  2594     03AC                     l1191:
  2595                           
  2596                           ;I2C_LCD.c: 55: unsigned char I2C_Master_Write(unsigned char data);I2C_LCD.c: 56: {;I2C_
      +                          LCD.c: 57:   I2C_Master_Wait();
  2597     03AC  120A  118A  239E  120A  118A  	fcall	_I2C_Master_Wait
  2598     03B1                     l1193:
  2599                           
  2600                           ;I2C_LCD.c: 58:   SSPBUF = data;
  2601     03B1  0870               	movf	I2C_Master_Write@data,w
  2602     03B2  1283               	bcf	3,5	;RP0=0, select bank0
  2603     03B3  1303               	bcf	3,6	;RP1=0, select bank0
  2604     03B4  0093               	movwf	19	;volatile
  2605     03B5                     l95:	
  2606                           ;I2C_LCD.c: 59:   while(!SSPIF);
  2607                           
  2608     03B5  1D8C               	btfss	12,3	;volatile
  2609     03B6  2BB8               	goto	u461
  2610     03B7  2BB9               	goto	u460
  2611     03B8                     u461:
  2612     03B8  2BB5               	goto	l95
  2613     03B9                     u460:
  2614     03B9                     l97:
  2615                           
  2616                           ;I2C_LCD.c: 60:   SSPIF = 0;
  2617     03B9  118C               	bcf	12,3	;volatile
  2618     03BA                     l98:	
  2619                           ;I2C_LCD.c: 61:   return ACKSTAT;;	Return value of _I2C_Master_Write is never used
  2620                           
  2621     03BA  0008               	return
  2622     03BB                     __end_of_I2C_Master_Write:
  2623                           
  2624                           	psect	text14
  2625     0388                     __ptext14:	
  2626 ;; *************** function _I2C_Master_Stop *****************
  2627 ;; Defined at:
  2628 ;;		line 35 in file "I2C_LCD.c"
  2629 ;; Parameters:    Size  Location     Type
  2630 ;;		None
  2631 ;; Auto vars:     Size  Location     Type
  2632 ;;		None
  2633 ;; Return value:  Size  Location     Type
  2634 ;;                  1    wreg      void 
  2635 ;; Registers used:
  2636 ;;		wreg, status,2, status,0, pclath, cstack
  2637 ;; Tracked objects:
  2638 ;;		On entry : 0/0
  2639 ;;		On exit  : 0/0
  2640 ;;		Unchanged: 0/0
  2641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2642 ;;      Params:         0       0       0       0       0
  2643 ;;      Locals:         0       0       0       0       0
  2644 ;;      Temps:          0       0       0       0       0
  2645 ;;      Totals:         0       0       0       0       0
  2646 ;;Total ram usage:        0 bytes
  2647 ;; Hardware stack levels used: 1
  2648 ;; Hardware stack levels required when called: 1
  2649 ;; This function calls:
  2650 ;;		_I2C_Master_Wait
  2651 ;; This function is called by:
  2652 ;;		_IO_Expander_Write
  2653 ;; This function uses a non-reentrant model
  2654 ;;
  2655                           
  2656     0388                     _I2C_Master_Stop:	
  2657                           ;psect for function _I2C_Master_Stop
  2658                           
  2659     0388                     l1187:	
  2660                           ;incstack = 0
  2661                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2662                           
  2663                           
  2664                           ;I2C_LCD.c: 37:   I2C_Master_Wait();
  2665     0388  120A  118A  239E  120A  118A  	fcall	_I2C_Master_Wait
  2666     038D                     l1189:
  2667                           
  2668                           ;I2C_LCD.c: 38:   PEN = 1;
  2669     038D  1683               	bsf	3,5	;RP0=1, select bank1
  2670     038E  1303               	bcf	3,6	;RP1=0, select bank1
  2671     038F  1511               	bsf	17,2	;volatile
  2672     0390                     l86:
  2673     0390  0008               	return
  2674     0391                     __end_of_I2C_Master_Stop:
  2675                           
  2676                           	psect	text15
  2677     037F                     __ptext15:	
  2678 ;; *************** function _I2C_Master_Start *****************
  2679 ;; Defined at:
  2680 ;;		line 23 in file "I2C_LCD.c"
  2681 ;; Parameters:    Size  Location     Type
  2682 ;;		None
  2683 ;; Auto vars:     Size  Location     Type
  2684 ;;		None
  2685 ;; Return value:  Size  Location     Type
  2686 ;;                  1    wreg      void 
  2687 ;; Registers used:
  2688 ;;		wreg, status,2, status,0, pclath, cstack
  2689 ;; Tracked objects:
  2690 ;;		On entry : 0/0
  2691 ;;		On exit  : 0/0
  2692 ;;		Unchanged: 0/0
  2693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2694 ;;      Params:         0       0       0       0       0
  2695 ;;      Locals:         0       0       0       0       0
  2696 ;;      Temps:          0       0       0       0       0
  2697 ;;      Totals:         0       0       0       0       0
  2698 ;;Total ram usage:        0 bytes
  2699 ;; Hardware stack levels used: 1
  2700 ;; Hardware stack levels required when called: 1
  2701 ;; This function calls:
  2702 ;;		_I2C_Master_Wait
  2703 ;; This function is called by:
  2704 ;;		_IO_Expander_Write
  2705 ;; This function uses a non-reentrant model
  2706 ;;
  2707                           
  2708     037F                     _I2C_Master_Start:	
  2709                           ;psect for function _I2C_Master_Start
  2710                           
  2711     037F                     l1183:	
  2712                           ;incstack = 0
  2713                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2714                           
  2715                           
  2716                           ;I2C_LCD.c: 25:   I2C_Master_Wait();
  2717     037F  120A  118A  239E  120A  118A  	fcall	_I2C_Master_Wait
  2718     0384                     l1185:
  2719                           
  2720                           ;I2C_LCD.c: 26:   SEN = 1;
  2721     0384  1683               	bsf	3,5	;RP0=1, select bank1
  2722     0385  1303               	bcf	3,6	;RP1=0, select bank1
  2723     0386  1411               	bsf	17,0	;volatile
  2724     0387                     l80:
  2725     0387  0008               	return
  2726     0388                     __end_of_I2C_Master_Start:
  2727                           
  2728                           	psect	text16
  2729     039E                     __ptext16:	
  2730 ;; *************** function _I2C_Master_Wait *****************
  2731 ;; Defined at:
  2732 ;;		line 18 in file "I2C_LCD.c"
  2733 ;; Parameters:    Size  Location     Type
  2734 ;;		None
  2735 ;; Auto vars:     Size  Location     Type
  2736 ;;		None
  2737 ;; Return value:  Size  Location     Type
  2738 ;;                  1    wreg      void 
  2739 ;; Registers used:
  2740 ;;		wreg, status,2
  2741 ;; Tracked objects:
  2742 ;;		On entry : 0/0
  2743 ;;		On exit  : 0/0
  2744 ;;		Unchanged: 0/0
  2745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2746 ;;      Params:         0       0       0       0       0
  2747 ;;      Locals:         0       0       0       0       0
  2748 ;;      Temps:          0       0       0       0       0
  2749 ;;      Totals:         0       0       0       0       0
  2750 ;;Total ram usage:        0 bytes
  2751 ;; Hardware stack levels used: 1
  2752 ;; This function calls:
  2753 ;;		Nothing
  2754 ;; This function is called by:
  2755 ;;		_I2C_Master_Start
  2756 ;;		_I2C_Master_Stop
  2757 ;;		_I2C_Master_Write
  2758 ;;		_I2C_Master_RepeatedStart
  2759 ;;		_I2C_ACK
  2760 ;;		_I2C_NACK
  2761 ;;		_I2C_Read_Byte
  2762 ;; This function uses a non-reentrant model
  2763 ;;
  2764                           
  2765     039E                     _I2C_Master_Wait:	
  2766                           ;psect for function _I2C_Master_Wait
  2767                           
  2768     039E                     l1179:	
  2769                           ;incstack = 0
  2770                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2771                           
  2772     039E                     l74:	
  2773                           ;I2C_LCD.c: 20:   while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2774                           
  2775     039E  1683               	bsf	3,5	;RP0=1, select bank1
  2776     039F  1303               	bcf	3,6	;RP1=0, select bank1
  2777     03A0  1914               	btfsc	20,2	;volatile
  2778     03A1  2BA3               	goto	u441
  2779     03A2  2BA4               	goto	u440
  2780     03A3                     u441:
  2781     03A3  2B9E               	goto	l74
  2782     03A4                     u440:
  2783     03A4                     l1181:
  2784     03A4  0811               	movf	17,w	;volatile
  2785     03A5  391F               	andlw	31
  2786     03A6  1D03               	btfss	3,2
  2787     03A7  2BA9               	goto	u451
  2788     03A8  2BAA               	goto	u450
  2789     03A9                     u451:
  2790     03A9  2B9E               	goto	l74
  2791     03AA                     u450:
  2792     03AA                     l77:
  2793     03AA  0008               	return
  2794     03AB                     __end_of_I2C_Master_Wait:
  2795                           
  2796                           	psect	text17
  2797     0391                     __ptext17:	
  2798 ;; *************** function _I2C_Master_Init *****************
  2799 ;; Defined at:
  2800 ;;		line 8 in file "I2C_LCD.c"
  2801 ;; Parameters:    Size  Location     Type
  2802 ;;		None
  2803 ;; Auto vars:     Size  Location     Type
  2804 ;;		None
  2805 ;; Return value:  Size  Location     Type
  2806 ;;                  1    wreg      void 
  2807 ;; Registers used:
  2808 ;;		wreg, status,2
  2809 ;; Tracked objects:
  2810 ;;		On entry : 0/0
  2811 ;;		On exit  : 0/0
  2812 ;;		Unchanged: 0/0
  2813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2814 ;;      Params:         0       0       0       0       0
  2815 ;;      Locals:         0       0       0       0       0
  2816 ;;      Temps:          0       0       0       0       0
  2817 ;;      Totals:         0       0       0       0       0
  2818 ;;Total ram usage:        0 bytes
  2819 ;; Hardware stack levels used: 1
  2820 ;; This function calls:
  2821 ;;		Nothing
  2822 ;; This function is called by:
  2823 ;;		_main
  2824 ;; This function uses a non-reentrant model
  2825 ;;
  2826                           
  2827     0391                     _I2C_Master_Init:	
  2828                           ;psect for function _I2C_Master_Init
  2829                           
  2830     0391                     l1287:	
  2831                           ;incstack = 0
  2832                           ; Regs used in _I2C_Master_Init: [wreg+status,2]
  2833                           
  2834                           
  2835                           ;I2C_LCD.c: 10:   SSPCON = 0x28;
  2836     0391  3028               	movlw	40
  2837     0392  1283               	bcf	3,5	;RP0=0, select bank0
  2838     0393  1303               	bcf	3,6	;RP1=0, select bank0
  2839     0394  0094               	movwf	20	;volatile
  2840     0395                     l1289:
  2841                           
  2842                           ;I2C_LCD.c: 11:   SSPCON2 = 0x00;
  2843     0395  1683               	bsf	3,5	;RP0=1, select bank1
  2844     0396  1303               	bcf	3,6	;RP1=0, select bank1
  2845     0397  0191               	clrf	17	;volatile
  2846     0398                     l1291:
  2847                           
  2848                           ;I2C_LCD.c: 12:   SSPSTAT = 0x00;
  2849     0398  0194               	clrf	20	;volatile
  2850                           
  2851                           ;I2C_LCD.c: 13:   SSPADD = ((16000000/4)/100000) - 1;
  2852     0399  3027               	movlw	39
  2853     039A  0093               	movwf	19	;volatile
  2854     039B                     l1293:
  2855                           
  2856                           ;I2C_LCD.c: 14:   TRISC3 = 1;
  2857     039B  1587               	bsf	7,3	;volatile
  2858     039C                     l1295:
  2859                           
  2860                           ;I2C_LCD.c: 15:   TRISC4 = 1;
  2861     039C  1607               	bsf	7,4	;volatile
  2862     039D                     l71:
  2863     039D  0008               	return
  2864     039E                     __end_of_I2C_Master_Init:
  2865     007E                     btemp	set	126	;btemp
  2866     007E                     wtemp0	set	126
  2867                           
  2868                           	psect	config
  2869                           
  2870                           ;Config register CONFIG1 @ 0x2007
  2871                           ;	Oscillator Selection bits
  2872                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  2873                           ;	Watchdog Timer Enable bit
  2874                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2875                           ;	Power-up Timer Enable bit
  2876                           ;	PWRTE = OFF, PWRT disabled
  2877                           ;	RE3/MCLR pin function select bit
  2878                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2879                           ;	Code Protection bit
  2880                           ;	CP = OFF, Program memory code protection is disabled
  2881                           ;	Data Code Protection bit
  2882                           ;	CPD = OFF, Data memory code protection is disabled
  2883                           ;	Brown Out Reset Selection bits
  2884                           ;	BOREN = ON, BOR enabled
  2885                           ;	Internal External Switchover bit
  2886                           ;	IESO = ON, Internal/External Switchover mode is enabled
  2887                           ;	Fail-Safe Clock Monitor Enabled bit
  2888                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  2889                           ;	Low Voltage Programming Enable bit
  2890                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2891                           ;	In-Circuit Debugger Mode bit
  2892                           ;	DEBUG = 0x1, unprogrammed default
  2893     2007                     	org	8199
  2894     2007  2FF2               	dw	12274
  2895                           
  2896                           ;Config register CONFIG2 @ 0x2008
  2897                           ;	Brown-out Reset Selection bit
  2898                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2899                           ;	Flash Program Memory Self Write Enable bits
  2900                           ;	WRT = OFF, Write protection off
  2901     2008                     	org	8200
  2902     2008  3FFF               	dw	16383

Data Sizes:
    Strings     19
    Constant    10
    Data        1
    BSS         1
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     23      25
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_3(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 3
		 -> main@str(BANK0[3]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCD_Write_String@Str	PTR unsigned char  size(2) Largest target is 8
		 -> main@str(BANK0[3]), STR_2(CODE[7]), STR_1(CODE[8]), 


Critical Paths under _main in COMMON

    _main->_LCD_Write_String
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Write_4Bit
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_Init->_LCD_CMD
    _LCD_CMD->_LCD_Write_4Bit
    _LCD_Write_4Bit->_IO_Expander_Write
    _IO_Expander_Write->_I2C_Master_Write

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    3041
                                             15 BANK0      8     8      0
                    _I2C_Master_Init
                           _LCD_Init
                     _LCD_Set_Cursor
                   _LCD_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    20      3    1796
                                              0 BANK0     15    12      3
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              7 COMMON     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     7     5      2     451
                                              6 COMMON     7     5      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Char                                       2     2      0     133
                                              4 COMMON     2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       4     3      1     471
                                              6 COMMON     4     3      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             4     4      0     199
                                              6 COMMON     4     4      0
                  _IO_Expander_Write
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _LCD_CMD                                              2     2      0     133
                                              4 COMMON     2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_4Bit                                       2     2      0      89
                                              2 COMMON     2     2      0
                  _IO_Expander_Write
 ---------------------------------------------------------------------------------
 (4) _IO_Expander_Write                                    1     1      0      44
                                              1 COMMON     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     1     1      0      22
                                              0 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
   _LCD_Init
     _IO_Expander_Write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _LCD_CMD
       _LCD_Write_4Bit
         _IO_Expander_Write
   _LCD_Set_Cursor
     _LCD_CMD
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Write_4Bit
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     17      19       5       31.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      27      12        0.0%
ABS                  0      0      27       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Aug 31 03:15:47 2023

                        pc 0002                         l22 0587                         l71 039D  
                       l80 0387                         l74 039E                         l77 03AA  
                       l86 0390                         l95 03B5                         l97 03B9  
                       l98 03BA                         _RS 007D                         fsr 0004  
      ___wmul@multiplicand 0072                        l110 0437                        l113 03E5  
                      l107 067E                        l116 03FF                        l125 050E  
                      l134 0492                        l119 041A                        l270 07F4  
                      l274 0444                        l259 075A                        l276 045C  
                      l546 0552                        l556 04CC                        l727 03CC  
                      _RD7 0047                        u500 03C9                        u501 03C8  
                      u510 043E                        u511 043D                        u440 03A4  
                      _PEN 048A                        u441 03A3                        u450 03AA  
                      u610 054E                        u451 03A9                        u611 054D  
                      u460 03B9                        u700 050E                        u620 0499  
                      u540 0458                        u461 03B8                        u701 050D  
                      u605 0542                        u621 0498                        u541 0457  
                      u525 0445                        u550 0517                        u710 068B  
                      u551 0516                        u535 044C                        u711 068A  
                      u640 04AB                        u800 077B                        u720 06A8  
                      u641 04AA                        u801 077A                        u721 06A7  
                      u570 0529                        u650 04B5                        u490 03C3  
                      u810 0790                        u730 06E8                        u475 03F2  
                      u571 0528                        u651 04B4                        u635 049D  
                      u491 03C2                        u811 078F                        u731 06E7  
                      u820 0796                        u740 0717                        _SEN 0488  
                      u485 040D                        u565 051B                        u821 0795  
                      u741 0716                        u590 053A                        u670 04C8  
                      u830 07E0                        u750 073D                        u591 0539  
                      u671 04C7                        u655 04B1                        u831 07DF  
                      u751 073C                        u680 04DA                        u840 07F0  
                      u760 0748                        u585 052A                        u665 04BC  
                      u841 07EF                        u761 0747                        u690 04FC  
                      u770 074E                        u850 05DF                        u907 0600  
                      u595 0536                        u771 074D                        u755 0739  
                      u851 05DE                        u780 0754                        u917 060F  
                      u781 0753                        u790 0765                        u927 061E  
                      u791 0764                        u855 05DB                        u937 062D  
                      u947 063E                        u795 0761                        u957 0651  
                      u877 0592                        u967 0664                        u887 05A4  
                      u977 0677                        u897 05F2                        u987 03E2  
                      fsr0 0004                        indf 0000            __end_of_LCD_CMD 0400  
      LCD_Write_String@Str 0076             _LCD_Set_Cursor 045D                       l1201 03D9  
                     l1203 03E7                       l1211 0403                       l1205 03E8  
                     l1301 05EE                       l1221 03CB                       l1213 03BC  
                     l1207 03EF                       l1311 0614                       l1303 05F6  
                     l1231 044B                       l1215 03BD                       l1321 0638  
                     l1313 061A                       l1305 05FC                       l1209 0401  
                     l1241 0511                       l1233 0452                       l1225 0438  
                     l1217 03C3                       l1401 0722                       l1331 066B  
                     l1323 0645                       l1315 0623                       l1307 0605  
                     l1251 0529                       l1243 0517                       l1235 0458  
                     l1227 043A                       l1219 03C9                       l1411 074E  
                     l1181 03A4                       l1333 0671                       l1325 064B  
                     l1317 0629                       l1309 060B                       l1341 046F  
                     l1253 053A                       l1245 051A                       l1261 054E  
                     l1229 043E                       l1421 077B                       l1413 0754  
                     l1405 073E                       l1183 037F                       l1191 03AC  
                     l1327 0658                       l1319 0632                       l1343 0477  
                     l1335 045E                       l1351 04CD                       l1255 0540  
                     l1247 0521                       l1239 050F                       l1271 04A3  
                     l1431 079B                       l1423 0780                       l1415 0765  
                     l1407 0742                       l1185 0384                       l1193 03B1  
                     l1329 065E                       l1337 045F                       l1345 047F  
                     l1353 04D0                       l1257 0541                       l1249 0525  
                     l1281 04C2                       l1273 04A7                       l1265 0493  
                     l1441 07D7                       l1433 079F                       l1425 0784  
                     l1417 0771                       l1409 0748                       l1361 0685  
                     l1291 0398                       l1179 039E                       l1187 0388  
                     l1195 041C                       l1339 0467                       l1355 04EC  
                     l1259 0548                       l1275 04AB                       l1267 0499  
                     l1283 04C8                       l1435 07A2                       l1427 0790  
                     l1419 0775                       l1371 06A8                       l1363 068B  
                     l1443 07E0                       l1293 039B                       l1189 038D  
                     l1197 03CE                       l1357 04F2                       l1277 04B5  
                     l1269 049C                       l1437 07CE                       l1429 0796  
                     l1445 07F0                       l1373 06AC                       l1365 0690  
                     l1461 056F                       l1453 0553                       l1295 039C  
                     l1287 0391                       l1199 03D2                       l1279 04BB  
                     l1439 07D3                       l1391 0717                       l1375 06C1  
                     l1383 06E8                       l1367 0695                       l1359 0682  
                     l1463 0577                       l1455 0558                       l1289 0395  
                     l1297 05E4                       l1393 071B                       l1385 0707  
                     l1377 06D4                       l1369 0698                       l1481 05C1  
                     l1473 058A                       l1465 0580                       l1457 055E  
                     l1299 05E8                       l1395 0720                       l1387 070F  
                     l1379 06D8                       l1483 05CA                       l1475 0599  
                     l1467 0583                       l1459 0566                       l1389 0713  
                     l1573 06FC                       l1485 05D2                       l1477 05AB  
                     l1575 0487                       l1479 05B3                       STR_1 001D  
                     STR_2 0025                       STR_3 002C                       _RCEN 048B  
                     _RSEN 0489          ?_LCD_Write_String 0076                       _main 0553  
                     btemp 007E                       start 0000         ??_LCD_Write_String 0078  
     LCD_Write_4Bit@Nibble 0073           __end_of_LCD_Init 067F           ?_I2C_Master_Init 0070  
         ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070                      ?_main 0070  
                    _ACKEN 048C                      _ACKDT 048D            __end_of___lwdiv 0553  
          __end_of___lwmod 04CD                      _TRISD 0088                      _SSPIF 0063  
   __end_of_LCD_Set_Cursor 0493            __end_of_dpowers 001D            __end_of_isdigit 03CD  
                    main@i 0035                      pclath 000A                      status 0003  
                    wtemp0 007E            __end_of_sprintf 07F5             _LCD_Write_4Bit 03CD  
           _LCD_Write_Char 0400            __initialization 07F5               __end_of_main 05E3  
        _IO_Expander_Write 041B         ?_IO_Expander_Write 0070                     ??_main 002F  
                ??_LCD_CMD 0074          ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0070  
      ??_IO_Expander_Write 0071            ?_LCD_Set_Cursor 0076         ??_I2C_Master_Start 0070  
       ??_I2C_Master_Write 0070                     _SSPADD 0093                     _TRISC3 043B  
                   _TRISC4 043C                     _SSPCON 0014                     _SSPBUF 0013  
   __end_of_LCD_Write_4Bit 03E6     __end_of_LCD_Write_Char 041B  __end_of_IO_Expander_Write 0438  
                   ___wmul 0438                  ??___lwdiv 0074                  ??___lwmod 007B  
                ??_isdigit 0070                  ??_sprintf 0023    __end_of__initialization 07FC  
                ?_LCD_Init 0070            ?_LCD_Write_4Bit 0070            ?_LCD_Write_Char 0070  
           __pcstackCOMMON 0070               __pidataBANK0 037E               sprintf@width 002C  
               ??_LCD_Init 0076                 __pmaintext 0553                    ?___wmul 0070  
                  _ACKSTAT 048E                    _LCD_CMD 03E6                    _SSPCON2 0091  
                  _SSPSTAT 0094                 __stringtab 0003                    _i2c_add 0037  
                  ___lwdiv 050F                    ___lwmod 0493           ??_LCD_Set_Cursor 0077  
                  __ptext1 067F                    __ptext2 03BB                    __ptext3 0438  
                  __ptext4 0493                    __ptext5 050F                    __ptext6 04CD  
                  __ptext7 0400                    __ptext8 045D                    __ptext9 05E3  
                  _dpowers 0013                    _isdigit 03BB                    _sprintf 067F  
                  main@str 0032       end_of_initialization 07FC                 LCD_CMD@CMD 0075  
         ??_LCD_Write_4Bit 0072          LCD_Write_String@i 007B           ??_LCD_Write_Char 0074  
           __end_of___wmul 045D           _LCD_Write_String 04CD        start_initialization 07F5  
        ??_I2C_Master_Init 0070          ??_I2C_Master_Wait 0070          ??_I2C_Master_Stop 0070  
                 ??___wmul 0074                __pdataBANK0 0038                   ?_LCD_CMD 0070  
              __pbssCOMMON 007D                  ___latbits 0002              __pcstackBANK0 0020  
              sprintf@flag 0028                sprintf@prec 0027                  __pnvBANK0 0037  
         _I2C_Master_Start 037F           _I2C_Master_Write 03AB           ___lwdiv@dividend 0072  
    IO_Expander_Write@Data 0071                   ?___lwdiv 0070                   ?___lwmod 0077  
     I2C_Master_Write@data 0070                  __pstrings 0003                   ?_isdigit 0070  
         ___lwdiv@quotient 0074                   ?_sprintf 0020                   _LCD_Init 05E3  
           ___wmul@product 0074                __stringbase 0012          ___wmul@multiplier 0070  
 __end_of_LCD_Write_String 050F         __end_of__stringtab 0013                _isdigit$608 0070  
               sprintf@val 0029            _I2C_Master_Init 0391            _I2C_Master_Wait 039E  
          _I2C_Master_Stop 0388            ___lwdiv@divisor 0070            ___lwdiv@counter 0076  
                 __ptext10 03E6                   __ptext11 03CD                   __ptext12 041B  
                 __ptext13 03AB                   __ptext14 0388                   __ptext15 037F  
                 __ptext16 039E                   __ptext17 0391            _BackLight_State 0038  
 __end_of_I2C_Master_Start 0388   __end_of_I2C_Master_Write 03BB         LCD_Write_Char@Data 0075  
                 isdigit@c 0071                  sprintf@ap 0026                  sprintf@sp 002B  
         ___lwmod@dividend 0079                  stringcode 000D    __end_of_I2C_Master_Init 039E  
  __end_of_I2C_Master_Wait 03AB    __end_of_I2C_Master_Stop 0391            LCD_Init@I2C_Add 0079  
                 sprintf@c 002E                   sprintf@f 0020            ___lwmod@divisor 0077  
          ___lwmod@counter 007B                   stringdir 000D                   stringtab 0003  
        LCD_Set_Cursor@COL 0076          LCD_Set_Cursor@ROW 0079  
